/* Generated by the Nim Compiler v0.19.4 */
/*   (c) 2018 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI25395 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25391 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25387 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25383 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25379 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25375 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25371 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25367 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25363 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25359 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25355 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25351 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25347 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25343 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25339 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25335 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25331 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25327 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25323 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25319 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25204 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI25262 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI25260 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI25218 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI25452 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI25450 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI25220 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI25448 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI25222 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI25248 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI25246 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI25499 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI25228 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI25542 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI25254 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI25252 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI25216 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI25214 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI25230 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI130 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI25258 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI25256 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI201025 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI195032 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI211285 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI37907 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI201038 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI192509 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI201105 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI199466 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI199469 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI199598 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI199282 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI199480 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI199284 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI199137 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI199153 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI199078 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI17403 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI199089 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI204056 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI193004 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI193003 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI205043 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI205058 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI3896 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI3804 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI192401 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3862 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI192057 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3850 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3858 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI15346 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3808 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3918 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI114 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI3912 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3826 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3828 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3842 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3846 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI3846 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3846.node = NNI3846;
var NNI3842 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3842.node = NNI3842;
var NNI3828 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3828.node = NNI3828;
NTI3912.base = NTI3826;
NTI3918.base = NTI3826;
var NNI3826 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3912, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}, 
{kind: 1, offset: "raise_id", len: 0, typ: NTI114, name: "raise_id", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI3918, name: "up", sons: null}]};
NTI3826.node = NNI3826;
var NNI3808 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3808.node = NNI3808;
NTI3826.base = NTI3808;
NTI3828.base = NTI3826;
NTI3842.base = NTI3828;
NTI3846.base = NTI3842;
var NNI15346 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI140, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI15346.node = NNI15346;
var NNI3858 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3858.node = NNI3858;
NTI3858.base = NTI3828;
var NNI3850 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3850.node = NNI3850;
NTI3850.base = NTI3828;
var NNI192057 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI104, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI192057.node = NNI192057;
var NNI3862 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3862.node = NNI3862;
NTI3862.base = NTI3828;
NTI3804.base = NTI3896;
var NNI192401 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI104, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3804, name: "Field1", sons: null}]};
NTI192401.node = NNI192401;
NTI205058.base = NTI104;
NTI205043.base = NTI104;
NTI193004.base = NTI104;
var NNI193003 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "tiles", len: 0, typ: NTI193004, name: "tiles", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI104, name: "width", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI104, name: "height", sons: null}]};
NTI193003.node = NNI193003;
var NNI199089 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI17403, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI199089.node = NNI199089;
NTI199078.base = NTI192057;
NTI199153.base = NTI192057;
NTI199137.base = NTI192057;
NTI199284.base = NTI192057;
var NNI199480 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI17403, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI199480.node = NNI199480;
NTI199282.base = NTI192057;
var NNI199598 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI104, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI17403, name: "Field1", sons: null}]};
NTI199598.node = NNI199598;
NTI199469.base = NTI192057;
NTI199466.base = NTI192057;
NTI201105.base = NTI192057;
var NNI192509 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI104, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI192509.node = NNI192509;
NTI201038.base = NTI138;
var NNI37907 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI104, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI104, name: "b", sons: null}]};
NTI37907.node = NNI37907;
NTI211285.base = NTI138;
NTI195032.base = NTI192057;
var NNI25258 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "border", len: 0, typ: NTI104, name: "border", sons: null}, 
{kind: 1, offset: "complete", len: 0, typ: NTI130, name: "complete", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI104, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI104, name: "hspace", sons: null}, 
{kind: 1, offset: "lowsrc", len: 0, typ: NTI140, name: "lowsrc", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI140, name: "src", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI104, name: "vspace", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI104, name: "width", sons: null}]};
NTI25258.node = NNI25258;
var NNI25216 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI25216.node = NNI25216;
NTI25216.base = NTI3808;
NTI25214.base = NTI25216;
NTI25228.base = NTI25230;
NTI25542.base = NTI25228;
var NNI25254 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "action", len: 0, typ: NTI140, name: "action", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI140, name: "encoding", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI140, name: "method", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI140, name: "target", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI25542, name: "elements", sons: null}]};
NTI25254.node = NNI25254;
NTI25254.base = NTI25230;
NTI25252.base = NTI25254;
var NNI25248 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI130, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI130, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI104, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI140, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI140, name: "value", sons: null}]};
NTI25248.node = NNI25248;
NTI25248.base = NTI25230;
NTI25246.base = NTI25248;
NTI25499.base = NTI25246;
var NNI25230 = {kind: 2, len: 11, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "classList", len: 0, typ: NTI25214, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI130, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI130, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI140, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI130, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI25252, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI130, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI25499, name: "options", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI104, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI104, name: "clientHeight", sons: null}]};
NTI25230.node = NNI25230;
NTI25220.base = NTI25222;
NTI25448.base = NTI25220;
NTI25450.base = NTI25220;
NTI25452.base = NTI25220;
var NNI25218 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI25218, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI25218, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI25218, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI25218, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI25218, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI25218, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI25218, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI25218, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI25218, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI25218, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI25218, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI25218, name: "NotationNode", len: 0, sons: null}}};
NTI25218.node = NNI25218;
var NNI25262 = {kind: 2, len: 91, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI140, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI140, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI140, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI140, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI140, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI140, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI140, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI140, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI140, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI140, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI140, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI140, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI140, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI140, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI140, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI140, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI140, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI140, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI140, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI140, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI140, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI140, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI140, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI140, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI140, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI140, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI140, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI140, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI140, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI140, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI140, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI140, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI140, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI140, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI140, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI140, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI140, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI140, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI140, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI140, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI140, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI140, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI140, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI140, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI140, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI140, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI140, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI140, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI140, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI140, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI140, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI140, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI140, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI140, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI140, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI140, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI140, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI140, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI140, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI140, name: "minWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI140, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI140, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI140, name: "overflowY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI140, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI140, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI140, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI140, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI140, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI140, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI140, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI140, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI140, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI140, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI140, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI140, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI140, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI140, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI140, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI140, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI140, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI140, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI140, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI140, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI140, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI140, name: "textTransform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI140, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI140, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI140, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI140, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI140, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI104, name: "zIndex", sons: null}]};
NTI25262.node = NNI25262;
NTI25262.base = NTI3808;
NTI25260.base = NTI25262;
var NNI25222 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI25448, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI25450, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI25452, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI140, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI25220, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI25220, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI25220, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI140, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI25218, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI140, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI25220, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI25220, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI140, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI25260, name: "style", sons: null}]};
NTI25222.node = NNI25222;
var NNI25204 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI25319, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI25323, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI25327, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI25331, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI25335, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI25339, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI25343, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI25347, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI25351, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI25355, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI25359, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI25363, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI25367, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI25371, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI25375, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI25379, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI25383, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI25387, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI25391, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI25395, name: "onunload", sons: null}]};
NTI25204.node = NNI25204;
NTI25204.base = NTI3808;
NTI25222.base = NTI25204;
NTI25230.base = NTI25222;
NTI25258.base = NTI25230;
NTI25256.base = NTI25258;
NTI201025.base = NTI25256;

function makeNimstrLit(c_16225) {
		  var ln = c_16225.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_16225.charCodeAt(i);
  }
  return result;
  

	
}

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_17230, src_17231, ti_17232) {
	var result_17655 = null;

		switch (ti_17232.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_17201(ti_17232))) {
			result_17655 = src_17231;
			}
			else {
				result_17655 = [src_17231[0], src_17231[1]];
			}
			
			break;
		case 19:
			      if (dest_17230 === null || dest_17230 === undefined) {
        dest_17230 = {};
      }
      else {
        for (var key in dest_17230) { delete dest_17230[key]; }
      }
      for (var key in src_17231) { dest_17230[key] = src_17231[key]; }
      result_17655 = dest_17230;
    
			break;
		case 18:
		case 17:
			if (!((ti_17232.base == null))) {
			result_17655 = nimCopy(dest_17230, src_17231, ti_17232.base);
			}
			else {
			if ((ti_17232.kind == 17)) {
			result_17655 = (dest_17230 === null || dest_17230 === undefined) ? {m_type: ti_17232} : dest_17230;
			}
			else {
				result_17655 = (dest_17230 === null || dest_17230 === undefined) ? {} : dest_17230;
			}
			}
			nimCopyAux(result_17655, src_17231, ti_17232.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_17231 === null) {
        result_17655 = null;
      }
      else {
        if (dest_17230 === null || dest_17230 === undefined) {
          dest_17230 = new Array(src_17231.length);
        }
        else {
          dest_17230.length = src_17231.length;
        }
        result_17655 = dest_17230;
        for (var i = 0; i < src_17231.length; ++i) {
          result_17655[i] = nimCopy(result_17655[i], src_17231[i], ti_17232.base);
        }
      }
    
			break;
		case 28:
			      if (src_17231 !== null) {
        result_17655 = src_17231.slice(0);
      }
    
			break;
		default: 
			result_17655 = src_17231;
			break;
		}

	return result_17655;

}

function arrayConstr(len_17716, value_17717, typ_17718) {
		    var result = new Array(len_17716);
    for (var i = 0; i < len_17716; ++i) result[i] = nimCopy(null, value_17717, typ_17718);
    return result;
  

	
}

function cstrToNimstr(c_16242) {
		  var ln = c_16242.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_16242.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_16242.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function toJSStr(s_16259) {
		  if (s_16259 === null) return "";
  var len = s_16259.length;
  var asciiPart = new Array(len);
  var fcc = String.fromCharCode;
  var nonAsciiPart = null;
  var nonAsciiOffset = 0;
  for (var i = 0; i < len; ++i) {
    if (nonAsciiPart !== null) {
      var offset = (i - nonAsciiOffset) * 2;
      var code = s_16259[i].toString(16);
      if (code.length == 1) {
        code = "0"+code;
      }
      nonAsciiPart[offset] = "%";
      nonAsciiPart[offset + 1] = code;
    }
    else if (s_16259[i] < 128)
      asciiPart[i] = fcc(s_16259[i]);
    else {
      asciiPart.length = i;
      nonAsciiOffset = i;
      nonAsciiPart = new Array((len - i) * 2);
      --i;
    }
  }
  asciiPart = asciiPart.join("");
  return (nonAsciiPart === null) ?
      asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function raiseException(e_15818, ename_15819) {
		e_15818.name = ename_15819;
		if ((excHandler == 0)) {
		unhandledException(e_15818);
		}
		
		e_15818.trace = nimCopy(null, raw_write_stack_trace_15655(), NTI138);
		throw e_15818;

	
}

function addInt(a_16603, b_16604) {
		    var result = a_16603 + b_16604;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function mulInt(a_16639, b_16640) {
		    var result = a_16639 * b_16640;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function chckIndx(i_17735, a_17736, b_17737) {
			var Tmp1;

	var result_17738 = 0;

	BeforeRet: do {
			if (!(a_17736 <= i_17735)) Tmp1 = false; else {				Tmp1 = (i_17735 <= b_17737);			}		if (Tmp1) {
		result_17738 = i_17735;
		break BeforeRet;
		}
		else {
		raiseIndexError();
		}
		
	} while (false);

	return result_17738;

}

function subInt(a_16621, b_16622) {
		    var result = a_16621 - b_16622;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function chckRange(i_17754, a_17755, b_17756) {
			var Tmp1;

	var result_17757 = 0;

	BeforeRet: do {
			if (!(a_17755 <= i_17754)) Tmp1 = false; else {				Tmp1 = (i_17754 <= b_17756);			}		if (Tmp1) {
		result_17757 = i_17754;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_17757;

}

function rawEcho() {
		      var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

	
}

function eqStrings(a_16454, b_16455) {
		    if (a_16454 == b_16455) return true;
    if (a_16454 === null && b_16455.length == 0) return true;
    if (b_16455 === null && a_16454.length == 0) return true;
    if ((!a_16454) || (!b_16455)) return false;
    var alen = a_16454.length;
    if (alen != b_16455.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_16454[i] != b_16455[i]) return false;
    return true;
  

	
}

function nimMin(a_16940, b_16941) {
		var Tmp1;

	var result_16942 = 0;

	BeforeRet: do {
		if ((a_16940 <= b_16941)) {
		Tmp1 = a_16940;
		}
		else {
		Tmp1 = b_16941;
		}
		
		result_16942 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_16942;

}

function absInt(a_16819) {
		var Tmp1;

	var result_16820 = 0;

		if ((a_16819 < 0)) {
		Tmp1 = (a_16819 * -1);
		}
		else {
		Tmp1 = a_16819;
		}
		
		result_16820 = Tmp1;

	return result_16820;

}
var nimvm_7173 = false;
var nim_program_result = 0;
var global_raise_hook_13418 = [null];
var local_raise_hook_13423 = [null];
var out_of_mem_hook_13426 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var object_id_137246 = [0];
var game_207014 = [null];

function is_fat_pointer_17201(ti_17203) {
	var result_17204 = false;

	BeforeRet: do {
		result_17204 = !((ConstSet1[ti_17203.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_17204;

}

function nimCopyAux(dest_17235, src_17236, n_17238) {
		switch (n_17238.kind) {
		case 0:
			break;
		case 1:
			      dest_17235[n_17238.offset] = nimCopy(dest_17235[n_17238.offset], src_17236[n_17238.offset], n_17238.typ);
    
			break;
		case 2:
			L1: do {
				var i_17628 = 0;
				var colontmp__17630 = 0;
				colontmp__17630 = (n_17238.len - 1);
				var res_17633 = 0;
				L2: do {
						L3: while (true) {
						if (!(res_17633 <= colontmp__17630)) break L3;
							i_17628 = res_17633;
							nimCopyAux(dest_17235, src_17236, n_17238.sons[i_17628]);
							res_17633 += 1;
						}
				} while(false);
			} while(false);
			break;
		case 3:
			      dest_17235[n_17238.offset] = nimCopy(dest_17235[n_17238.offset], src_17236[n_17238.offset], n_17238.typ);
      for (var i = 0; i < n_17238.sons.length; ++i) {
        nimCopyAux(dest_17235, src_17236, n_17238.sons[i][1]);
      }
    
			break;
		}

	
}

function add_13438(x_13441, x_13441_Idx, y_13442) {
		      if (x_13441[x_13441_Idx] === null) { x_13441[x_13441_Idx] = []; }
      var off = x_13441[x_13441_Idx].length;
      x_13441[x_13441_Idx].length += y_13442.length;
      for (var i = 0; i < y_13442.length; ++i) {
        x_13441[x_13441_Idx][off+i] = y_13442.charCodeAt(i);
      }
    

	
}

function aux_write_stack_trace_15341(f_15343) {
					var Tmp3;

	var result_15344 = [null];

		var it_15352 = f_15343;
		var i_15354 = 0;
		var total_15356 = 0;
		var temp_frames_15363 = arrayConstr(64, {Field0: null, Field1: 0}, NTI15346);
		L1: do {
				L2: while (true) {
					if (!!((it_15352 == null))) Tmp3 = false; else {						Tmp3 = (i_15354 <= 63);					}				if (!Tmp3) break L2;
					temp_frames_15363[i_15354].Field0 = it_15352.procname;
					temp_frames_15363[i_15354].Field1 = it_15352.line;
					i_15354 += 1;
					total_15356 += 1;
					it_15352 = it_15352.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_15352 == null))) break L5;
					total_15356 += 1;
					it_15352 = it_15352.prev;
				}
		} while(false);
		result_15344[0] = nimCopy(null, [], NTI138);
		if (!((total_15356 == i_15354))) {
		if (result_15344[0] != null) { result_15344[0] = (result_15344[0]).concat(makeNimstrLit("(")); } else { result_15344[0] = makeNimstrLit("("); };
		if (result_15344[0] != null) { result_15344[0] = (result_15344[0]).concat(cstrToNimstr(((total_15356 - i_15354))+"")); } else { result_15344[0] = cstrToNimstr(((total_15356 - i_15354))+"").slice(); };
		if (result_15344[0] != null) { result_15344[0] = (result_15344[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_15344[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
		}
		
		L6: do {
			var j_15628 = 0;
			var colontmp__15635 = 0;
			colontmp__15635 = (i_15354 - 1);
			var res_15638 = colontmp__15635;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_15638)) break L8;
						j_15628 = res_15638;
						add_13438(result_15344, 0, temp_frames_15363[j_15628].Field0);
						if ((0 < temp_frames_15363[j_15628].Field1)) {
						if (result_15344[0] != null) { result_15344[0] = (result_15344[0]).concat(makeNimstrLit(", line: ")); } else { result_15344[0] = makeNimstrLit(", line: "); };
						if (result_15344[0] != null) { result_15344[0] = (result_15344[0]).concat(cstrToNimstr((temp_frames_15363[j_15628].Field1)+"")); } else { result_15344[0] = cstrToNimstr((temp_frames_15363[j_15628].Field1)+"").slice(); };
						}
						
						if (result_15344[0] != null) { result_15344[0] = (result_15344[0]).concat(makeNimstrLit("\x0A")); } else { result_15344[0] = makeNimstrLit("\x0A"); };
						res_15638 -= 1;
					}
			} while(false);
		} while(false);

	return result_15344[0];

}

function raw_write_stack_trace_15655() {
	var result_15657 = null;

		if (!((framePtr == null))) {
		result_15657 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A")).concat(aux_write_stack_trace_15341(framePtr)), NTI138);
		}
		else {
			result_15657 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI138);
		}
		

	return result_15657;

}

function unhandledException(e_15719) {
		var buf_15720 = [[]];
		if (!(((e_15719.message != null ? e_15719.message.length : 0) == 0))) {
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_15720[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0]).concat(e_15719.message); } else { buf_15720[0] = e_15719.message.slice(); };
		}
		else {
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_15720[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0]).concat(makeNimstrLit(" [")); } else { buf_15720[0] = makeNimstrLit(" ["); };
		add_13438(buf_15720, 0, e_15719.name);
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0]).concat(makeNimstrLit("]\x0A")); } else { buf_15720[0] = makeNimstrLit("]\x0A"); };
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0]).concat(raw_write_stack_trace_15655()); } else { buf_15720[0] = raw_write_stack_trace_15655().slice(); };
		var cbuf_15801 = toJSStr(buf_15720[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_15801);
  }
  else {
    throw cbuf_15801;
  }
  

	
}

function raiseOverflow() {
		var e_16065 = null;
		e_16065 = {m_type: NTI3846, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		e_16065.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
		e_16065.parent = null;
		raiseException(e_16065, "OverflowError");

	
}

function raiseIndexError() {
		var e_16155 = null;
		e_16155 = {m_type: NTI3858, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		e_16155.message = nimCopy(null, makeNimstrLit("index out of bounds"), NTI138);
		e_16155.parent = null;
		raiseException(e_16155, "IndexError");

	
}

function sys_fatal_20437(message_20443) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
		F.line = 2915;
		var e_20445 = null;
		F.line = 2916;
		e_20445 = {m_type: NTI3850, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		F.line = 2917;
		e_20445.message = nimCopy(null, message_20443, NTI138);
		F.line = 2918;
		raiseException(e_20445, "AssertionError");
	framePtr = F.prev;

	
}

function raise_assert_20432(msg_20434) {
	var F={procname:"system.raiseAssert",prev:framePtr,filename:"../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
		F.line = 3872;
		sys_fatal_20437(msg_20434);
	framePtr = F.prev;

	
}

function failed_assert_impl_20481(msg_20483) {
	var F={procname:"system.failedAssertImpl",prev:framePtr,filename:"../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
		F.line = 3879;
		raise_assert_20432(msg_20483);
	framePtr = F.prev;

	
}

function get_creatures_at_196097(entities_196100, x_196101, y_196102) {
							var Tmp4;
							var Tmp5;

	var result_196103 = null;

	var F={procname:"entity.get_creatures_at",prev:framePtr,filename:"entity.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		L1: do {
			F.line = 53;
			var entity_196215 = null;
			F.line = 3911;
			var i_196226 = 0;
			F.line = 3912;
			var l_196228 = (entities_196100 != null ? entities_196100.length : 0);
			L2: do {
				F.line = 3913;
					L3: while (true) {
					if (!(i_196226 < l_196228)) break L3;
						F.line = 3914;
						entity_196215 = entities_196100[chckIndx(i_196226, 0, entities_196100.length+0-1)-0];
							if (!!((entity_196215.creature === null))) Tmp5 = false; else {								Tmp5 = (entity_196215.position.Field0 == x_196101);							}							if (!Tmp5) Tmp4 = false; else {								Tmp4 = (entity_196215.position.Field1 == y_196102);							}						if (Tmp4) {
						F.line = 55;
						result_196103 = entity_196215;
						break BeforeRet;
						}
						
						F.line = 3915;
						i_196226 = addInt(i_196226, 1);
						if (!(((entities_196100 != null ? entities_196100.length : 0) == l_196228))) {
						F.line = 3916;
						failed_assert_impl_20481(makeNimstrLit("/home/kasia/.choosenim/toolchains/nim-0.19.4/lib/system.nim(3916, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 57;
		result_196103 = null;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_196103;

}

function take_damage_197266(cr_197268, amount_197269) {
	var F={procname:"entity.take_damage",prev:framePtr,filename:"entity.nim",line:0};
	framePtr = F;
		F.line = 103;
		cr_197268.hp = subInt(cr_197268.hp, amount_197269);
		if ((cr_197268.hp <= 0)) {
		F.line = 107;
		cr_197268.dead = true;
		}
		
	framePtr = F.prev;

	
}

function attack_197292(cr_197294, target_197295, messages_197298, messages_197298_Idx) {
	var F={procname:"entity.attack",prev:framePtr,filename:"entity.nim",line:0};
	framePtr = F;
		F.line = 110;
		var rng_197299 = aleaRNG();
		F.line = 111;
		var damage_197300 = roller(rng_197299, "1d6");
		if ((0 < damage_197300)) {
		F.line = 114;
		take_damage_197266(target_197295.creature, damage_197300);
		F.line = 115;
		if (messages_197298[messages_197298_Idx] != null) { messages_197298[messages_197298_Idx].push((cr_197294.owner.name).concat(makeNimstrLit(" attacks "),target_197295.name,makeNimstrLit(" for "),cstrToNimstr((damage_197300)+""),makeNimstrLit(" points of damage!"))); } else { messages_197298[messages_197298_Idx] = [(cr_197294.owner.name).concat(makeNimstrLit(" attacks "),target_197295.name,makeNimstrLit(" for "),cstrToNimstr((damage_197300)+""),makeNimstrLit(" points of damage!"))]; };
		}
		else {
			F.line = 117;
		if (messages_197298[messages_197298_Idx] != null) { messages_197298[messages_197298_Idx].push((cr_197294.owner.name).concat(makeNimstrLit(" attacks "),target_197295.name,makeNimstrLit(" but does no damage"))); } else { messages_197298[messages_197298_Idx] = [(cr_197294.owner.name).concat(makeNimstrLit(" attacks "),target_197295.name,makeNimstrLit(" but does no damage"))]; };
		}
		
	framePtr = F.prev;

	
}

function move_197336(e_197338, dx_197339, dy_197340, map_197341, entities_197343, messages_197346, messages_197346_Idx) {
			var Tmp1;

	var result_197347 = false;

	var F={procname:"entity.move",prev:framePtr,filename:"entity.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 123;
		var tx_197348 = addInt(e_197338.position.Field0, dx_197339);
		F.line = 124;
		var ty_197349 = addInt(e_197338.position.Field1, dy_197340);
		if (((tx_197348 < 0) || (ty_197349 < 0))) {
		F.line = 127;
		result_197347 = false;
		break BeforeRet;
		}
		
			if (((map_197341.tiles != null ? map_197341.tiles.length : 0) < tx_197348)) Tmp1 = true; else {				Tmp1 = ((map_197341.tiles != null ? map_197341.tiles.length : 0) < ty_197349);			}		if (Tmp1) {
		F.line = 130;
		result_197347 = false;
		break BeforeRet;
		}
		
		if ((map_197341.tiles[chckIndx(addInt(mulInt(ty_197349, map_197341.width), tx_197348), 0, map_197341.tiles.length+0-1)-0] == 0)) {
		F.line = 134;
		result_197347 = false;
		break BeforeRet;
		}
		
		F.line = 137;
		var target_197364 = null;
		F.line = 138;
		target_197364 = get_creatures_at_196097(entities_197343, tx_197348, ty_197349);
		if (!((target_197364 === null))) {
		F.line = 141;
		attack_197292(e_197338.creature, target_197364, messages_197346, messages_197346_Idx);
		F.line = 143;
		result_197347 = false;
		break BeforeRet;
		}
		
		F.line = 145;
		nimCopy(e_197338.position, {Field0: addInt(e_197338.position.Field0, dx_197339), Field1: addInt(e_197338.position.Field1, dy_197340)}, NTI192057);
		F.line = 146;
		result_197347 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_197347;

}

function moveNim(x_207030, y_207031) {
			var Tmp1;

	var F={procname:"input_handler.moveNim",prev:framePtr,filename:"input_handler.nim",line:0};
	framePtr = F;
			if (!(game_207014[0].game_state == 0)) Tmp1 = false; else {				Tmp1 = move_197336(game_207014[0].player, x_207030, y_207031, game_207014[0].map, game_207014[0].entities, game_207014[0], "game_messages");			}		if (Tmp1) {
		F.line = 18;
		game_207014[0].recalc_FOV = true;
		}
		
		F.line = 19;
		game_207014[0].game_state = 1;
	framePtr = F.prev;

	
}

function get_items_at_196242(entities_196245, x_196246, y_196247) {
							var Tmp4;
							var Tmp5;

	var result_196248 = null;

	var F={procname:"entity.get_items_at",prev:framePtr,filename:"entity.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		L1: do {
			F.line = 60;
			var entity_196257 = null;
			F.line = 3911;
			var i_196268 = 0;
			F.line = 3912;
			var l_196270 = (entities_196245 != null ? entities_196245.length : 0);
			L2: do {
				F.line = 3913;
					L3: while (true) {
					if (!(i_196268 < l_196270)) break L3;
						F.line = 3914;
						entity_196257 = entities_196245[chckIndx(i_196268, 0, entities_196245.length+0-1)-0];
							if (!!((entity_196257.item === null))) Tmp5 = false; else {								Tmp5 = (entity_196257.position.Field0 == x_196246);							}							if (!Tmp5) Tmp4 = false; else {								Tmp4 = (entity_196257.position.Field1 == y_196247);							}						if (Tmp4) {
						F.line = 62;
						result_196248 = entity_196257;
						break BeforeRet;
						}
						
						F.line = 3915;
						i_196268 = addInt(i_196268, 1);
						if (!(((entities_196245 != null ? entities_196245.length : 0) == l_196270))) {
						F.line = 3916;
						failed_assert_impl_20481(makeNimstrLit("/home/kasia/.choosenim/toolchains/nim-0.19.4/lib/system.nim(3916, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 64;
		result_196248 = null;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_196248;

}

function pick_up_196473(item_196475, e_196476) {
	var F={procname:"entity.pick_up",prev:framePtr,filename:"entity.nim",line:0};
	framePtr = F;
		if (!((e_196476.inventory === null))) {
		F.line = 83;
		if (e_196476.inventory.items != null) { e_196476.inventory.items.push(item_196475); } else { e_196476.inventory.items = [item_196475]; };
		}
		
	framePtr = F.prev;

	
}

function delete_207127(x_207133, x_207133_Idx, i_207135) {
	var F={procname:"delete.delete",prev:framePtr,filename:"../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
		F.line = 1643;
		x_207133[x_207133_Idx].splice(i_207135, 1);
	framePtr = F.prev;

	
}

function find_207069(a_207074, item_207076) {
	var result_207077 = 0;

	var F={procname:"find.find",prev:framePtr,filename:"../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		L1: do {
			F.line = 2511;
			var i_207086 = null;
			F.line = 3911;
			var i_207110 = 0;
			F.line = 3912;
			var l_207112 = (a_207074 != null ? a_207074.length : 0);
			L2: do {
				F.line = 3913;
					L3: while (true) {
					if (!(i_207110 < l_207112)) break L3;
						F.line = 3914;
						i_207086 = a_207074[chckIndx(i_207110, 0, a_207074.length+0-1)-0];
						if ((i_207086 == item_207076)) {
						F.line = 2512;
						break BeforeRet;
						}
						
						F.line = 2513;
						result_207077 = addInt(result_207077, 1);
						F.line = 3915;
						i_207110 = addInt(i_207110, 1);
						if (!(((a_207074 != null ? a_207074.length : 0) == l_207112))) {
						F.line = 3916;
						failed_assert_impl_20481(makeNimstrLit("/home/kasia/.choosenim/toolchains/nim-0.19.4/lib/system.nim(3916, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 2514;
		result_207077 = -1;
	} while (false);
	framePtr = F.prev;

	return result_207077;

}

function raiseRangeError() {
		var e_16125 = null;
		e_16125 = {m_type: NTI3862, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		e_16125.message = nimCopy(null, makeNimstrLit("value out of range"), NTI138);
		e_16125.parent = null;
		raiseException(e_16125, "RangeError");

	
}

function pickupNim() {
	var F={procname:"input_handler.pickupNim",prev:framePtr,filename:"input_handler.nim",line:0};
	framePtr = F;
		if ((game_207014[0].game_state == 0)) {
		F.line = 23;
		var it_207050 = get_items_at_196242(game_207014[0].entities, game_207014[0].player.position.Field0, game_207014[0].player.position.Field1);
		if (!((it_207050 === null))) {
		F.line = 25;
		pick_up_196473(it_207050.item, game_207014[0].player);
		F.line = 26;
		if (game_207014[0].game_messages != null) { game_207014[0].game_messages.push((makeNimstrLit("Picked up item ")).concat(it_207050.name)); } else { game_207014[0].game_messages = [(makeNimstrLit("Picked up item ")).concat(it_207050.name)]; };
		F.line = 28;
		delete_207127(game_207014[0], "entities", chckRange(find_207069(game_207014[0].entities, it_207050), 0, 2147483647));
		}
		else {
			F.line = 30;
		if (game_207014[0].game_messages != null) { game_207014[0].game_messages.push(makeNimstrLit("No item to pick up here")); } else { game_207014[0].game_messages = [makeNimstrLit("No item to pick up here")]; };
		}
		
		}
		
		F.line = 32;
		game_207014[0].game_state = 1;
	framePtr = F.prev;

	
}

function show_inventory_keypad_207650() {
	var F={procname:"input_handler.showInventoryKeypad",prev:framePtr,filename:"input_handler.nim",line:0};
	framePtr = F;
		F.line = 37;
		document.getElementById("keypad").style.display = "none";
		F.line = 38;
		document.getElementById("inventory_keypad").style.display = "block";
		F.line = 40;
		var target_207652 = getInventoryKeypad();
		L1: do {
			F.line = 43;
			var i_207671 = 0;
			F.line = 2104;
			var colontmp__207673 = 0;
			F.line = 43;
			colontmp__207673 = subInt((game_207014[0].player.inventory.items != null ? game_207014[0].player.inventory.items.length : 0), 1);
			F.line = 2107;
			var res_207676 = 0;
			L2: do {
				F.line = 2108;
					L3: while (true) {
					if (!(res_207676 <= colontmp__207673)) break L3;
						F.line = 2109;
						i_207671 = res_207676;
						F.line = 44;
						createButton(target_207652, i_207671);
						F.line = 2110;
						res_207676 = addInt(res_207676, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function showInventoryNim() {
	var F={procname:"input_handler.showInventoryNim",prev:framePtr,filename:"input_handler.nim",line:0};
	framePtr = F;
		F.line = 57;
		game_207014[0].previous_state = game_207014[0].game_state;
		F.line = 59;
		game_207014[0].game_state = 3;
		F.line = 61;
		show_inventory_keypad_207650();
	framePtr = F.prev;

	
}

function showDropNim() {
	var F={procname:"input_handler.showDropNim",prev:framePtr,filename:"input_handler.nim",line:0};
	framePtr = F;
		F.line = 64;
		game_207014[0].previous_state = game_207014[0].game_state;
		F.line = 66;
		game_207014[0].game_state = 4;
		F.line = 68;
		show_inventory_keypad_207650();
	framePtr = F.prev;

	
}

function hide_inventory_keypad_207693() {
	var F={procname:"input_handler.hideInventoryKeypad",prev:framePtr,filename:"input_handler.nim",line:0};
	framePtr = F;
		F.line = 48;
		document.getElementById("keypad").style.display = "block";
		F.line = 49;
		document.getElementById("inventory_keypad").style.display = "none";
		F.line = 51;
		var target_207695 = getInventoryKeypad();
		F.line = 52;
		removeAll(target_207695);
	framePtr = F.prev;

	
}

function quitInventoryNim() {
			var Tmp1;

	var F={procname:"input_handler.quitInventoryNim",prev:framePtr,filename:"input_handler.nim",line:0};
	framePtr = F;
			if ((game_207014[0].game_state == 3)) Tmp1 = true; else {				Tmp1 = (game_207014[0].game_state == 4);			}		if (Tmp1) {
		F.line = 73;
		game_207014[0].game_state = game_207014[0].previous_state;
		F.line = 75;
		hide_inventory_keypad_207693();
		}
		
	framePtr = F.prev;

	
}

function use_item_197238(item_197240, user_197241) {
	var result_197242 = false;

	var F={procname:"entity.use_item",prev:framePtr,filename:"entity.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!((item_197240.use_func === null))) {
		F.line = 95;
		rawEcho(makeNimstrLit("Calling use function"));
		F.line = 96;
		item_197240.use_func(item_197240, user_197241);
		F.line = 97;
		result_197242 = true;
		break BeforeRet;
		}
		else {
			F.line = 99;
			result_197242 = false;
			break BeforeRet;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_197242;

}

function HEX3DHEX3D_196382(x_196386, y_196388) {
	var result_196389 = false;

	var F={procname:"==.==",prev:framePtr,filename:"../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!((x_196386["Field0"] == y_196388["Field0"]))) {
		F.line = 2585;
		result_196389 = false;
		break BeforeRet;
		}
		
		if (!((x_196386["Field1"] == y_196388["Field1"]))) {
		F.line = 2585;
		result_196389 = false;
		break BeforeRet;
		}
		
		F.line = 2586;
		result_196389 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_196389;

}

function find_196333(a_196338, item_196340) {
	var result_196341 = 0;

	var F={procname:"find.find",prev:framePtr,filename:"../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		L1: do {
			F.line = 2511;
			var i_196380 = {Field0: 0, Field1: 0};
			F.line = 2247;
			var i_196425 = 0;
			L2: do {
				F.line = 2248;
					L3: while (true) {
					if (!(i_196425 < (a_196338 != null ? a_196338.length : 0))) break L3;
						F.line = 2249;
						nimCopy(i_196380, a_196338[chckIndx(i_196425, 0, a_196338.length+0-1)-0], NTI192057);
						if (HEX3DHEX3D_196382(i_196380, item_196340)) {
						F.line = 2512;
						break BeforeRet;
						}
						
						F.line = 2513;
						result_196341 = addInt(result_196341, 1);
						F.line = 2250;
						i_196425 = addInt(i_196425, 1);
					}
			} while(false);
		} while(false);
		F.line = 2514;
		result_196341 = -1;
	} while (false);
	framePtr = F.prev;

	return result_196341;

}

function contains_196323(a_196328, item_196330) {
	var result_196331 = false;

	var F={procname:"contains.contains",prev:framePtr,filename:"../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 2519;
		result_196331 = (0 <= find_196333(a_196328, item_196330));
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_196331;

}

function HEX2AHEX3D_192405(x_192410, x_192410_Idx, y_192412) {
	var F={procname:"*=.*=",prev:framePtr,filename:"../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
		F.line = 3796;
		x_192410[x_192410_Idx] = mulInt(x_192410[x_192410_Idx], y_192412);
	framePtr = F.prev;

	
}

function HEX5E_192085(x_192089, y_192091) {
	var result_192092 = [0];

	var F={procname:"^.^",prev:framePtr,filename:"../../../.choosenim/toolchains/nim-0.19.4/lib/pure/math.nim",line:0};
	framePtr = F;
		if (!((0 <= y_192091))) {
		F.line = 661;
		failed_assert_impl_20481(makeNimstrLit("/home/kasia/.choosenim/toolchains/nim-0.19.4/lib/pure/math.nim(661, 12) `\x0AT(0) <= y` "));
		}
		
		F.line = 664;
		var colontmp__207920 = {Field0: 0, Field1: 0};
		F.line = 664;
		var x_192402 = [0];
		F.line = 664;
		var y_192403 = 0;
		F.line = 664;
		nimCopy(colontmp__207920, {Field0: x_192089, Field1: y_192091}, NTI192401);
		F.line = 664;
		x_192402[0] = colontmp__207920["Field0"];
		F.line = 664;
		y_192403 = colontmp__207920["Field1"];
		F.line = 665;
		result_192092[0] = 1;
		L1: do {
			F.line = 667;
				L2: while (true) {
				if (!true) break L2;
					if (!(((y_192403 & 1) == 0))) {
					F.line = 669;
					HEX2AHEX3D_192405(result_192092, 0, x_192402[0]);
					}
					
					F.line = 670;
					y_192403 = chckRange(((y_192403 >>> 0) >>> 1), 0, 2147483647);
					if ((y_192403 == 0)) {
					F.line = 672;
					break L1;
					}
					
					F.line = 673;
					HEX2AHEX3D_192405(x_192402, 0, x_192402[0]);
				}
		} while(false);
	framePtr = F.prev;

	return result_192092[0];

}

function distance_to_192077(start_192079, to_192080) {
	var result_192081 = 0;

	var F={procname:"math_helpers.distance_to",prev:framePtr,filename:"math_helpers.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 15;
		var dx_192082 = subInt(to_192080.Field0, start_192079.Field0);
		F.line = 16;
		var dy_192083 = subInt(to_192080.Field1, start_192079.Field1);
		F.line = 17;
		result_192081 = ((Math.sqrt(addInt(HEX5E_192085(dx_192082, 2), HEX5E_192085(dy_192083, 2))))|0);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_192081;

}

function closest_monster_196284(player_196286, entities_196288, fov_map_196290, max_range_196291) {
							var Tmp4;
							var Tmp5;

	var result_196292 = null;

	var F={procname:"entity.closest_monster",prev:framePtr,filename:"entity.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 68;
		var target_196293 = null;
		F.line = 69;
		var closest_dist_196294 = 0;
		F.line = 70;
		closest_dist_196294 = addInt(max_range_196291, 1);
		L1: do {
			F.line = 71;
			var entity_196303 = null;
			F.line = 3911;
			var i_196457 = 0;
			F.line = 3912;
			var l_196459 = (entities_196288 != null ? entities_196288.length : 0);
			L2: do {
				F.line = 3913;
					L3: while (true) {
					if (!(i_196457 < l_196459)) break L3;
						F.line = 3914;
						entity_196303 = entities_196288[chckIndx(i_196457, 0, entities_196288.length+0-1)-0];
							if (!!((entity_196303.creature === null))) Tmp5 = false; else {								Tmp5 = !((entity_196303 == player_196286));							}							if (!Tmp5) Tmp4 = false; else {								Tmp4 = contains_196323(fov_map_196290, entity_196303.position);							}						if (Tmp4) {
						F.line = 74;
						var dist_196453 = distance_to_192077(player_196286.position, entity_196303.position);
						if ((dist_196453 < closest_dist_196294)) {
						F.line = 76;
						target_196293 = entity_196303;
						F.line = 77;
						closest_dist_196294 = dist_196453;
						}
						
						}
						
						F.line = 3915;
						i_196457 = addInt(i_196457, 1);
						if (!(((entities_196288 != null ? entities_196288.length : 0) == l_196459))) {
						F.line = 3916;
						failed_assert_impl_20481(makeNimstrLit("/home/kasia/.choosenim/toolchains/nim-0.19.4/lib/system.nim(3916, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 79;
		result_196292 = target_196293;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_196292;

}

function delete_196656(x_196662, x_196662_Idx, i_196664) {
	var F={procname:"delete.delete",prev:framePtr,filename:"../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
		F.line = 1643;
		x_196662[x_196662_Idx].splice(i_196664, 1);
	framePtr = F.prev;

	
}

function find_196512(a_196517, item_196519) {
	var result_196520 = 0;

	var F={procname:"find.find",prev:framePtr,filename:"../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		L1: do {
			F.line = 2511;
			var i_196615 = null;
			F.line = 3911;
			var i_196639 = 0;
			F.line = 3912;
			var l_196641 = (a_196517 != null ? a_196517.length : 0);
			L2: do {
				F.line = 3913;
					L3: while (true) {
					if (!(i_196639 < l_196641)) break L3;
						F.line = 3914;
						i_196615 = a_196517[chckIndx(i_196639, 0, a_196517.length+0-1)-0];
						if ((i_196615 == item_196519)) {
						F.line = 2512;
						break BeforeRet;
						}
						
						F.line = 2513;
						result_196520 = addInt(result_196520, 1);
						F.line = 3915;
						i_196639 = addInt(i_196639, 1);
						if (!(((a_196517 != null ? a_196517.length : 0) == l_196641))) {
						F.line = 3916;
						failed_assert_impl_20481(makeNimstrLit("/home/kasia/.choosenim/toolchains/nim-0.19.4/lib/system.nim(3916, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 2514;
		result_196520 = -1;
	} while (false);
	framePtr = F.prev;

	return result_196520;

}

function drop_196507(item_196509, e_196510) {
	var F={procname:"entity.drop",prev:framePtr,filename:"entity.nim",line:0};
	framePtr = F;
		F.line = 87;
		delete_196656(e_196510.inventory, "items", chckRange(find_196512(e_196510.inventory.items, item_196509), 0, 2147483647));
		F.line = 89;
		nimCopy(item_196509.owner.position, e_196510.position, NTI192057);
	framePtr = F.prev;

	
}

function inventorySelectNim(index_207760) {
	var F={procname:"input_handler.inventorySelectNim",prev:framePtr,filename:"input_handler.nim",line:0};
	framePtr = F;
		F.line = 79;
		var item_207761 = game_207014[0].player.inventory.items[chckIndx(index_207760, 0, game_207014[0].player.inventory.items.length+0-1)-0];
		if ((game_207014[0].game_state == 3)) {
		if (use_item_197238(item_207761, game_207014[0].player)) {
		F.line = 83;
		if (game_207014[0].game_messages != null) { game_207014[0].game_messages.push((game_207014[0].player.name).concat(makeNimstrLit(" uses "),item_207761.owner.name)); } else { game_207014[0].game_messages = [(game_207014[0].player.name).concat(makeNimstrLit(" uses "),item_207761.owner.name)]; };
		F.line = 85;
		quitInventoryNim();
		F.line = 87;
		game_207014[0].game_state = 1;
		}
		else {
		if (eqStrings(item_207761.owner.name, makeNimstrLit("lightning scroll"))) {
		F.line = 91;
		var tg_207776 = closest_monster_196284(game_207014[0].player, game_207014[0].entities, game_207014[0].FOV_map, 4);
		if ((tg_207776 === null)) {
		F.line = 93;
		if (game_207014[0].game_messages != null) { game_207014[0].game_messages.push(makeNimstrLit("No enemy is close enough to strike")); } else { game_207014[0].game_messages = [makeNimstrLit("No enemy is close enough to strike")]; };
		}
		else {
			F.line = 95;
			take_damage_197266(tg_207776.creature, 8);
			F.line = 96;
			if (game_207014[0].game_messages != null) { game_207014[0].game_messages.push((makeNimstrLit("A lightning bolt strikes ")).concat(tg_207776.name,makeNimstrLit(" and deals 8 damage!"))); } else { game_207014[0].game_messages = [(makeNimstrLit("A lightning bolt strikes ")).concat(tg_207776.name,makeNimstrLit(" and deals 8 damage!"))]; };
		}
		
		F.line = 98;
		delete_196656(game_207014[0].player.inventory, "items", chckRange(find_196512(game_207014[0].player.inventory.items, item_207761), 0, 2147483647));
		F.line = 100;
		if (game_207014[0].game_messages != null) { game_207014[0].game_messages.push((game_207014[0].player.name).concat(makeNimstrLit(" uses "),item_207761.owner.name)); } else { game_207014[0].game_messages = [(game_207014[0].player.name).concat(makeNimstrLit(" uses "),item_207761.owner.name)]; };
		F.line = 102;
		quitInventoryNim();
		F.line = 104;
		game_207014[0].game_state = 1;
		}
		else {
		if (item_207761.targeting) {
		F.line = 108;
		delete_196656(game_207014[0].player.inventory, "items", chckRange(find_196512(game_207014[0].player.inventory.items, item_207761), 0, 2147483647));
		F.line = 110;
		if (game_207014[0].game_messages != null) { game_207014[0].game_messages.push((game_207014[0].player.name).concat(makeNimstrLit(" uses "),item_207761.owner.name)); } else { game_207014[0].game_messages = [(game_207014[0].player.name).concat(makeNimstrLit(" uses "),item_207761.owner.name)]; };
		F.line = 112;
		quitInventoryNim();
		F.line = 115;
		game_207014[0].game_state = 5;
		F.line = 117;
		nimCopy(game_207014[0].targeting, game_207014[0].player.position, NTI192057);
		F.line = 121;
		document.getElementById("keypad").style.display = "none";
		F.line = 122;
		document.getElementById("targeting_keypad").style.display = "block";
		}
		else {
			F.line = 125;
		if (game_207014[0].game_messages != null) { game_207014[0].game_messages.push((item_207761.owner.name).concat(makeNimstrLit(" cannot be used!"))); } else { game_207014[0].game_messages = [(item_207761.owner.name).concat(makeNimstrLit(" cannot be used!"))]; };
		}
		}}
		}
		
		if ((game_207014[0].game_state == 4)) {
		F.line = 128;
		drop_196507(item_207761, game_207014[0].player);
		F.line = 129;
		if (game_207014[0].entities != null) { game_207014[0].entities.push(item_207761.owner); } else { game_207014[0].entities = [item_207761.owner]; };
		F.line = 130;
		if (game_207014[0].game_messages != null) { game_207014[0].game_messages.push((makeNimstrLit("You dropped the ")).concat(item_207761.owner.name)); } else { game_207014[0].game_messages = [(makeNimstrLit("You dropped the ")).concat(item_207761.owner.name)]; };
		F.line = 132;
		quitInventoryNim();
		F.line = 134;
		game_207014[0].game_state = 1;
		}
		
	framePtr = F.prev;

	
}

function saveGameNim() {
	var F={procname:"input_handler.saveGameNim",prev:framePtr,filename:"input_handler.nim",line:0};
	framePtr = F;
		F.line = 138;
		rawEcho(makeNimstrLit("Saving game test..."));
		F.line = 140;
		if (game_207014[0].game_messages != null) { game_207014[0].game_messages.push(makeNimstrLit("Saving game...")); } else { game_207014[0].game_messages = [makeNimstrLit("Saving game...")]; };
		F.line = 144;
		saveJS(game_207014[0]);
	framePtr = F.prev;

	
}

function is_stairs_193046(map_193048, x_193049, y_193050) {
	var result_193051 = false;

	var F={procname:"map.is_stairs",prev:framePtr,filename:"map.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((map_193048.tiles[chckIndx(addInt(mulInt(y_193050, map_193048.width), x_193049), 0, map_193048.tiles.length+0-1)-0] == 2)) {
		F.line = 23;
		result_193051 = true;
		break BeforeRet;
		}
		else {
			F.line = 25;
			result_193051 = false;
			break BeforeRet;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_193051;

}

function set_tile_205014(tiles_205018, tiles_205018_Idx, x_205019, y_205020, width_205021, id_205022) {
	var F={procname:"arena_map.setTile",prev:framePtr,filename:"arena_map.nim",line:0};
	framePtr = F;
		F.line = 7;
		tiles_205018[tiles_205018_Idx][chckIndx(addInt(mulInt(y_205020, width_205021), x_205019), 0, tiles_205018[tiles_205018_Idx].length+0-1)-0] = id_205022;
	framePtr = F.prev;

	
}

function HEX2EHEX2E_47828(a_47833, b_47835) {
	var result_47837 = {a: 0, b: 0};

	var F={procname:".....",prev:framePtr,filename:"../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
		F.line = 398;
		result_47837.a = a_47833;
		F.line = 399;
		result_47837.b = b_47835;
	framePtr = F.prev;

	return result_47837;

}

function generate_map_205036(width_205038, height_205039, pillars_205041) {
	var result_205042 = {tiles: null, width: 0, height: 0};

	var F={procname:"arena_map.generateMap",prev:framePtr,filename:"arena_map.nim",line:0};
	framePtr = F;
		F.line = 11;
		F.line = 11;
		var tiles_205059 = [nimCopy(null, [], NTI205058)];
		L1: do {
			F.line = 12;
			var i_205070 = 0;
			F.line = 3616;
			var colontmp__205155 = 0;
			F.line = 12;
			colontmp__205155 = mulInt(width_205038, height_205039);
			F.line = 3617;
			var i_205158 = 0;
			L2: do {
				F.line = 3618;
					L3: while (true) {
					if (!(i_205158 < colontmp__205155)) break L3;
						F.line = 3619;
						i_205070 = i_205158;
						F.line = 13;
						if (tiles_205059[0] != null) { tiles_205059[0].push(1); } else { tiles_205059[0] = [1]; };
						F.line = 3620;
						i_205158 = addInt(i_205158, 1);
					}
			} while(false);
		} while(false);
		L4: do {
			F.line = 16;
			var i_205098 = 0;
			F.line = 3616;
			var colontmp__205163 = 0;
			F.line = 16;
			colontmp__205163 = (pillars_205041 != null ? pillars_205041.length : 0);
			F.line = 3617;
			var i_205166 = 0;
			L5: do {
				F.line = 3618;
					L6: while (true) {
					if (!(i_205166 < colontmp__205163)) break L6;
						F.line = 3619;
						i_205098 = i_205166;
						F.line = 17;
						set_tile_205014(tiles_205059, 0, pillars_205041[chckIndx(i_205098, 0, pillars_205041.length+0-1)-0].Field0, pillars_205041[chckIndx(i_205098, 0, pillars_205041.length+0-1)-0].Field1, width_205038, 0);
						F.line = 3620;
						i_205166 = addInt(i_205166, 1);
					}
			} while(false);
		} while(false);
		L7: do {
			F.line = 20;
			var x_205110 = 0;
			F.line = 3617;
			var i_205171 = 0;
			L8: do {
				F.line = 3618;
					L9: while (true) {
					if (!(i_205171 < width_205038)) break L9;
						F.line = 3619;
						x_205110 = i_205171;
						F.line = 21;
						set_tile_205014(tiles_205059, 0, x_205110, 0, width_205038, 0);
						F.line = 22;
						set_tile_205014(tiles_205059, 0, x_205110, subInt(height_205039, 1), width_205038, 0);
						F.line = 3620;
						i_205171 = addInt(i_205171, 1);
					}
			} while(false);
		} while(false);
		L10: do {
			F.line = 24;
			var y_205123 = 0;
			F.line = 3617;
			var i_205176 = 0;
			L11: do {
				F.line = 3618;
					L12: while (true) {
					if (!(i_205176 < height_205039)) break L12;
						F.line = 3619;
						y_205123 = i_205176;
						F.line = 25;
						set_tile_205014(tiles_205059, 0, 0, y_205123, width_205038, 0);
						F.line = 26;
						set_tile_205014(tiles_205059, 0, subInt(width_205038, 1), y_205123, width_205038, 0);
						F.line = 3620;
						i_205176 = addInt(i_205176, 1);
					}
			} while(false);
		} while(false);
		F.line = 29;
		var rng_205126 = aleaRNG();
		F.line = 31;
		var x_205139 = range(rng_205126, HEX2EHEX2E_47828(1, subInt(height_205039, 2)));
		F.line = 32;
		var y_205152 = range(rng_205126, HEX2EHEX2E_47828(1, subInt(width_205038, 2)));
		F.line = 34;
		set_tile_205014(tiles_205059, 0, x_205139, y_205152, width_205038, 2);
		nimCopy(result_205042, {width: width_205038, height: height_205039, tiles: nimCopy(null, tiles_205059[0], NTI205043)}, NTI193003);
	framePtr = F.prev;

	return result_205042;

}

function add_quoted_205402(s_205406, s_205406_Idx, x_205408) {
	var F={procname:"addQuoted.addQuoted",prev:framePtr,filename:"../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
		F.line = 4110;
		if (s_205406[s_205406_Idx] != null) { s_205406[s_205406_Idx] = (s_205406[s_205406_Idx]).concat(cstrToNimstr((x_205408)+"")); } else { s_205406[s_205406_Idx] = cstrToNimstr((x_205408)+"").slice(); };
	framePtr = F.prev;

	
}

function HEX24_205268(x_205272) {
	var result_205273 = [null];

	var F={procname:"$.$",prev:framePtr,filename:"../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
		F.line = 2613;
		result_205273[0] = nimCopy(null, makeNimstrLit("("), NTI138);
		F.line = 2614;
		var first_element_205274 = true;
		if (!(first_element_205274)) {
		F.line = 2616;
		if (result_205273[0] != null) { result_205273[0] = (result_205273[0]).concat(makeNimstrLit(", ")); } else { result_205273[0] = makeNimstrLit(", "); };
		}
		
		F.line = 2617;
		if (result_205273[0] != null) { result_205273[0] = (result_205273[0]).concat(makeNimstrLit("x")); } else { result_205273[0] = makeNimstrLit("x"); };
		F.line = 2618;
		if (result_205273[0] != null) { result_205273[0] = (result_205273[0]).concat(makeNimstrLit(": ")); } else { result_205273[0] = makeNimstrLit(": "); };
		F.line = 2624;
		add_quoted_205402(result_205273, 0, x_205272["Field0"]);
		F.line = 2625;
		first_element_205274 = false;
		if (!(first_element_205274)) {
		F.line = 2616;
		if (result_205273[0] != null) { result_205273[0] = (result_205273[0]).concat(makeNimstrLit(", ")); } else { result_205273[0] = makeNimstrLit(", "); };
		}
		
		F.line = 2617;
		if (result_205273[0] != null) { result_205273[0] = (result_205273[0]).concat(makeNimstrLit("y")); } else { result_205273[0] = makeNimstrLit("y"); };
		F.line = 2618;
		if (result_205273[0] != null) { result_205273[0] = (result_205273[0]).concat(makeNimstrLit(": ")); } else { result_205273[0] = makeNimstrLit(": "); };
		F.line = 2624;
		add_quoted_205402(result_205273, 0, x_205272["Field1"]);
		F.line = 2625;
		first_element_205274 = false;
		F.line = 2628;
		if (result_205273[0] != null) { result_205273[0] = (result_205273[0]).concat(makeNimstrLit(")")); } else { result_205273[0] = makeNimstrLit(")"); };
	framePtr = F.prev;

	return result_205273[0];

}

function heal_204055(item_204057, user_204058) {
	var F={procname:"use_functions.heal",prev:framePtr,filename:"use_functions.nim",line:0};
	framePtr = F;
		F.line = 4;
		rawEcho(makeNimstrLit("Heal..."));
		if ((user_204058.creature.hp < user_204058.creature.max_hp)) {
		F.line = 6;
		var amount_204062 = nimMin(subInt(user_204058.creature.max_hp, user_204058.creature.hp), 5);
		F.line = 7;
		user_204058.creature.hp = addInt(user_204058.creature.hp, amount_204062);
		F.line = 8;
		delete_196656(user_204058.inventory, "items", chckRange(find_196512(user_204058.inventory.items, item_204057), 0, 2147483647));
		}
		
	framePtr = F.prev;

	
}

function place_entities_205192(map_205194, entities_205197, entities_205197_Idx, max_205198, max_items_205199) {
	var F={procname:"arena_map.place_entities",prev:framePtr,filename:"arena_map.nim",line:0};
	framePtr = F;
		F.line = 45;
		var rng_205200 = aleaRNG();
		F.line = 47;
		var num_205213 = range(rng_205200, HEX2EHEX2E_47828(1, max_205198));
		F.line = 49;
		var num_items_205226 = range(rng_205200, HEX2EHEX2E_47828(1, max_items_205199));
		L1: do {
			F.line = 52;
			var i_205238 = 0;
			F.line = 2107;
			var res_206369 = 1;
			L2: do {
				F.line = 2108;
					L3: while (true) {
					if (!(res_206369 <= num_205213)) break L3;
						F.line = 2109;
						i_205238 = res_206369;
						F.line = 54;
						var x_205251 = range(rng_205200, HEX2EHEX2E_47828(1, subInt(map_205194.height, 1)));
						F.line = 55;
						var y_205264 = range(rng_205200, HEX2EHEX2E_47828(1, subInt(map_205194.width, 1)));
						F.line = 57;
						var mon_205266 = {position: nimCopy(null, {Field0: x_205251, Field1: y_205264}, NTI192057), image: 3, name: makeNimstrLit("kobold"), creature: null, ai: null, item: null, inventory: null};
						F.line = 58;
						rawEcho((makeNimstrLit("Spawned monster at ")).concat(HEX24_205268(mon_205266.position)));
						F.line = 60;
						var creat_206217 = {owner: mon_205266, hp: 5, max_hp: 5, defense: 30, attack: 20, dead: false};
						F.line = 61;
						mon_205266.creature = creat_206217;
						F.line = 63;
						var ai_comp_206218 = {owner: mon_205266};
						F.line = 64;
						mon_205266.ai = ai_comp_206218;
						F.line = 65;
						if (entities_205197[entities_205197_Idx] != null) { entities_205197[entities_205197_Idx].push(mon_205266); } else { entities_205197[entities_205197_Idx] = [mon_205266]; };
						F.line = 2110;
						res_206369 = addInt(res_206369, 1);
					}
			} while(false);
		} while(false);
		L4: do {
			F.line = 67;
			var i_206240 = 0;
			F.line = 2107;
			var res_206378 = 1;
			L5: do {
				F.line = 2108;
					L6: while (true) {
					if (!(res_206378 <= num_items_205226)) break L6;
						F.line = 2109;
						i_206240 = res_206378;
						F.line = 69;
						var x_206253 = range(rng_205200, HEX2EHEX2E_47828(1, subInt(map_205194.height, 2)));
						F.line = 70;
						var y_206266 = range(rng_205200, HEX2EHEX2E_47828(1, subInt(map_205194.width, 2)));
						F.line = 72;
						var en_it_206268 = {position: nimCopy(null, {Field0: x_206253, Field1: y_206266}, NTI192057), image: 4, name: makeNimstrLit("potion"), creature: null, ai: null, item: null, inventory: null};
						F.line = 73;
						rawEcho((makeNimstrLit("Spawned item at ")).concat(HEX24_205268(en_it_206268.position)));
						F.line = 75;
						var it_206278 = {owner: en_it_206268, use_func: nimCopy(null, heal_204055, NTI204056), targeting: false};
						F.line = 76;
						en_it_206268.item = it_206278;
						F.line = 77;
						if (entities_205197[entities_205197_Idx] != null) { entities_205197[entities_205197_Idx].push(en_it_206268); } else { entities_205197[entities_205197_Idx] = [en_it_206268]; };
						F.line = 2110;
						res_206378 = addInt(res_206378, 1);
					}
			} while(false);
		} while(false);
		F.line = 81;
		var x_206301 = range(rng_205200, HEX2EHEX2E_47828(1, subInt(map_205194.height, 2)));
		F.line = 82;
		var y_206314 = range(rng_205200, HEX2EHEX2E_47828(1, subInt(map_205194.width, 2)));
		F.line = 84;
		var en_it_206316 = {position: nimCopy(null, {Field0: x_206301, Field1: y_206314}, NTI192057), image: 5, name: makeNimstrLit("lightning scroll"), creature: null, ai: null, item: null, inventory: null};
		F.line = 86;
		var it_206317 = {owner: en_it_206316, use_func: null, targeting: false};
		F.line = 87;
		en_it_206316.item = it_206317;
		F.line = 88;
		if (entities_205197[entities_205197_Idx] != null) { entities_205197[entities_205197_Idx].push(en_it_206316); } else { entities_205197[entities_205197_Idx] = [en_it_206316]; };
		F.line = 92;
		x_206301 = range(rng_205200, HEX2EHEX2E_47828(1, subInt(map_205194.height, 2)));
		F.line = 93;
		y_206314 = range(rng_205200, HEX2EHEX2E_47828(1, subInt(map_205194.width, 2)));
		F.line = 95;
		en_it_206316 = {position: nimCopy(null, {Field0: x_206301, Field1: y_206314}, NTI192057), image: 6, name: makeNimstrLit("fire scroll"), creature: null, ai: null, item: null, inventory: null};
		F.line = 97;
		it_206317 = {owner: en_it_206316, targeting: true, use_func: null};
		F.line = 98;
		en_it_206316.item = it_206317;
		F.line = 99;
		if (entities_205197[entities_205197_Idx] != null) { entities_205197[entities_205197_Idx].push(en_it_206316); } else { entities_205197[entities_205197_Idx] = [en_it_206316]; };
	framePtr = F.prev;

	
}

function get_fov_rect_199014(origin_199016, radius_199017) {
	var result_199018 = null;

	var F={procname:"FOV.get_fov_rect",prev:framePtr,filename:"FOV.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 7;
		var x_199019 = subInt(origin_199016.Field0, radius_199017);
		F.line = 8;
		var y_199020 = subInt(origin_199016.Field1, radius_199017);
		F.line = 9;
		var s_199022 = addInt(1, mulInt(radius_199017, 2));
		F.line = 10;
		result_199018 = {x: x_199019, y: y_199020, w: s_199022, h: s_199022};
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_199018;

}

function new_seq_199148(len_199152) {
	var result_199154 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
		F.line = 763;
		result_199154 = new Array(len_199152); for (var i=0;i<len_199152;++i) {result_199154[i]={Field0: 0, Field1: 0};}	framePtr = F.prev;

	return result_199154;

}

function reverse_199131(xs_199136) {
	var result_199138 = null;

	var F={procname:"reverse.reverse",prev:framePtr,filename:"seq_tools.nim",line:0};
	framePtr = F;
		F.line = 3;
		result_199138 = nimCopy(null, new_seq_199148(chckRange((xs_199136 != null ? xs_199136.length : 0), 0, 2147483647)), NTI199153);
		L1: do {
			F.line = 4;
			var i_199224 = 0;
			F.line = 4;
			var x_199225 = {Field0: 0, Field1: 0};
			F.line = 2354;
			var i_199239 = 0;
			L2: do {
				F.line = 2355;
					L3: while (true) {
					if (!(i_199239 < (xs_199136 != null ? xs_199136.length : 0))) break L3;
						F.line = 2356;
						i_199224 = i_199239;
						F.line = 2356;
						nimCopy(x_199225, xs_199136[chckIndx(i_199239, 0, xs_199136.length+0-1)-0], NTI192057);
						F.line = 6;
						nimCopy(result_199138[chckIndx(subInt((xs_199136 != null ? (xs_199136.length-1) : -1), i_199224), 0, result_199138.length+0-1)-0], x_199225, NTI192057);
						F.line = 2357;
						i_199239 = addInt(i_199239, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_199138;

}

function get_line_199056(from_cell_199058, to_199059) {
	var result_199061 = null;

	var F={procname:"FOV.get_line",prev:framePtr,filename:"FOV.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 27;
		var x1_199062 = from_cell_199058.Field0;
		F.line = 28;
		var y1_199063 = from_cell_199058.Field1;
		F.line = 29;
		var x2_199064 = to_199059.Field0;
		F.line = 30;
		var y2_199065 = to_199059.Field1;
		F.line = 31;
		var dx_199066 = subInt(x2_199064, x1_199062);
		F.line = 32;
		var dy_199067 = subInt(y2_199065, y1_199063);
		F.line = 36;
		var is_steep_199068 = (absInt(dx_199066) < absInt(dy_199067));
		if (is_steep_199068) {
		F.line = 40;
		var ox_199069 = x1_199062;
		F.line = 41;
		x1_199062 = y1_199063;
		F.line = 42;
		y1_199063 = ox_199069;
		F.line = 44;
		ox_199069 = x2_199064;
		F.line = 45;
		x2_199064 = y2_199065;
		F.line = 46;
		y2_199065 = ox_199069;
		}
		
		F.line = 49;
		var swapped_199070 = false;
		if ((x2_199064 < x1_199062)) {
		F.line = 52;
		var ox_199071 = x1_199062;
		F.line = 53;
		x1_199062 = x2_199064;
		F.line = 54;
		x2_199064 = ox_199071;
		F.line = 56;
		var oy_199072 = y1_199063;
		F.line = 57;
		y1_199063 = y2_199065;
		F.line = 58;
		y2_199065 = oy_199072;
		F.line = 59;
		swapped_199070 = true;
		}
		
		F.line = 62;
		dx_199066 = subInt(x2_199064, x1_199062);
		F.line = 63;
		dy_199067 = subInt(y2_199065, y1_199063);
		F.line = 66;
		var error_199073 = (((dx_199066 / 2.0000000000000000e+00))|0);
		F.line = 67;
		var ystep_199076 = -1;
		if ((y1_199063 < y2_199065)) {
		F.line = 69;
		ystep_199076 = 1;
		}
		
		F.line = 72;
		var y_199077 = y1_199063;
		F.line = 73;
		var points_199079 = null;
		L1: do {
			F.line = 74;
			var x_199088 = 0;
			F.line = 2107;
			var res_199259 = x1_199062;
			L2: do {
				F.line = 2108;
					L3: while (true) {
					if (!(res_199259 <= x2_199064)) break L3;
						F.line = 2109;
						x_199088 = res_199259;
						F.line = 75;
						var coord_199090 = {Field0: x_199088, Field1: y_199077};
						if (is_steep_199068) {
						F.line = 77;
						nimCopy(coord_199090, {Field0: y_199077, Field1: x_199088}, NTI199089);
						}
						
						F.line = 78;
						var Tmp4 = nimCopy(null, coord_199090, NTI192057);
						if (points_199079 != null) { points_199079.push(Tmp4); } else { points_199079 = [Tmp4]; };
						F.line = 79;
						error_199073 = subInt(error_199073, absInt(dy_199067));
						if ((error_199073 < 0)) {
						F.line = 81;
						y_199077 = addInt(y_199077, ystep_199076);
						F.line = 82;
						error_199073 = addInt(error_199073, dx_199066);
						}
						
						F.line = 2110;
						res_199259 = addInt(res_199259, 1);
					}
			} while(false);
		} while(false);
		F.line = 84;
		var ret_199129 = nimCopy(null, points_199079, NTI199078);
		if (swapped_199070) {
		F.line = 88;
		ret_199129 = nimCopy(null, reverse_199131(points_199079), NTI199137);
		}
		
		F.line = 90;
		result_199061 = nimCopy(null, ret_199129, NTI199078);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_199061;

}

function is_wall_199037(map_199039, wall_index_199040, cell_199041) {
	var result_199042 = false;

	var F={procname:"FOV.is_wall",prev:framePtr,filename:"FOV.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 14;
		result_199042 = (map_199039.tiles[chckIndx(addInt(mulInt(cell_199041.Field1, map_199039.width), cell_199041.Field0), 0, map_199039.tiles.length+0-1)-0] == wall_index_199040);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_199042;

}

function cast_fov_ray_199276(map_199278, wall_index_199279, from_cell_199280, to_199281) {
	var result_199283 = null;

	var F={procname:"FOV.cast_fov_ray",prev:framePtr,filename:"FOV.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 94;
		var cells_199285 = null;
		F.line = 95;
		var line_199286 = get_line_199056(from_cell_199280, to_199281);
		L1: do {
			F.line = 96;
			var cell_199415 = {Field0: 0, Field1: 0};
			F.line = 3911;
			var i_199444 = 0;
			F.line = 3912;
			var l_199446 = (line_199286 != null ? line_199286.length : 0);
			L2: do {
				F.line = 3913;
					L3: while (true) {
					if (!(i_199444 < l_199446)) break L3;
						F.line = 3914;
						nimCopy(cell_199415, line_199286[chckIndx(i_199444, 0, line_199286.length+0-1)-0], NTI192057);
						F.line = 98;
						var m_height_199416 = map_199278.height;
						if (((((-1 < cell_199415.Field0) && (cell_199415.Field0 < map_199278.width)) && (-1 < cell_199415.Field1)) && (cell_199415.Field1 < m_height_199416))) {
						if (!(is_wall_199037(map_199278, wall_index_199279, cell_199415))) {
						F.line = 102;
						var Tmp4 = nimCopy(null, cell_199415, NTI192057);
						if (cells_199285 != null) { cells_199285.push(Tmp4); } else { cells_199285 = [Tmp4]; };
						}
						else {
							F.line = 105;
							var Tmp5 = nimCopy(null, cell_199415, NTI192057);
							if (cells_199285 != null) { cells_199285.push(Tmp5); } else { cells_199285 = [Tmp5]; };
							F.line = 106;
							result_199283 = nimCopy(null, cells_199285, NTI199284);
							break BeforeRet;
						}
						
						}
						
						F.line = 3915;
						i_199444 = addInt(i_199444, 1);
						if (!(((line_199286 != null ? line_199286.length : 0) == l_199446))) {
						F.line = 3916;
						failed_assert_impl_20481(makeNimstrLit("/home/kasia/.choosenim/toolchains/nim-0.19.4/lib/system.nim(3916, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 107;
		result_199283 = nimCopy(null, cells_199285, NTI199284);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_199283;

}

function find_199493(a_199498, item_199500) {
	var result_199501 = 0;

	var F={procname:"find.find",prev:framePtr,filename:"../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		L1: do {
			F.line = 2511;
			var i_199510 = {Field0: 0, Field1: 0};
			F.line = 3911;
			var i_199532 = 0;
			F.line = 3912;
			var l_199534 = (a_199498 != null ? a_199498.length : 0);
			L2: do {
				F.line = 3913;
					L3: while (true) {
					if (!(i_199532 < l_199534)) break L3;
						F.line = 3914;
						nimCopy(i_199510, a_199498[chckIndx(i_199532, 0, a_199498.length+0-1)-0], NTI192057);
						if (HEX3DHEX3D_196382(i_199510, item_199500)) {
						F.line = 2512;
						break BeforeRet;
						}
						
						F.line = 2513;
						result_199501 = addInt(result_199501, 1);
						F.line = 3915;
						i_199532 = addInt(i_199532, 1);
						if (!(((a_199498 != null ? a_199498.length : 0) == l_199534))) {
						F.line = 3916;
						failed_assert_impl_20481(makeNimstrLit("/home/kasia/.choosenim/toolchains/nim-0.19.4/lib/system.nim(3916, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 2514;
		result_199501 = -1;
	} while (false);
	framePtr = F.prev;

	return result_199501;

}

function HEX2B_192486(a_192488, b_192489) {
	var result_192490 = {Field0: 0, Field1: 0};

	var F={procname:"math_helpers.+",prev:framePtr,filename:"math_helpers.nim",line:0};
	framePtr = F;
		F.line = 20;
		nimCopy(result_192490, {Field0: addInt(a_192488.Field0, b_192489.Field0), Field1: addInt(a_192488.Field1, b_192489.Field1)}, NTI192057);
	framePtr = F.prev;

	return result_192490;

}

function calculate_fov_199460(map_199462, wall_index_199463, origin_199464, radius_199465) {
															var Tmp32;

	var result_199467 = null;

	var F={procname:"FOV.calculate_fov",prev:framePtr,filename:"FOV.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 118;
		var rect_199468 = get_fov_rect_199014(origin_199464, radius_199465);
		F.line = 119;
		var cells_199470 = null;
		L1: do {
			F.line = 122;
			var x_199479 = 0;
			F.line = 2104;
			var colontmp__199728 = 0;
			F.line = 2104;
			var colontmp__199729 = 0;
			F.line = 122;
			colontmp__199728 = rect_199468.x;
			F.line = 122;
			colontmp__199729 = subInt(addInt(rect_199468.x, rect_199468.w), 1);
			F.line = 2107;
			var res_199732 = colontmp__199728;
			L2: do {
				F.line = 2108;
					L3: while (true) {
					if (!(res_199732 <= colontmp__199729)) break L3;
						F.line = 2109;
						x_199479 = res_199732;
						F.line = 123;
						var v_199481 = {Field0: x_199479, Field1: rect_199468.y};
						F.line = 124;
						var line_199482 = cast_fov_ray_199276(map_199462, wall_index_199463, origin_199464, v_199481);
						L4: do {
							F.line = 125;
							var cell_199491 = {Field0: 0, Field1: 0};
							F.line = 3911;
							var i_199719 = 0;
							F.line = 3912;
							var l_199721 = (line_199482 != null ? line_199482.length : 0);
							L5: do {
								F.line = 3913;
									L6: while (true) {
									if (!(i_199719 < l_199721)) break L6;
										F.line = 3914;
										nimCopy(cell_199491, line_199482[chckIndx(i_199719, 0, line_199482.length+0-1)-0], NTI192057);
										if ((find_199493(cells_199470, cell_199491) == -1)) {
										if ((distance_to_192077(cell_199491, origin_199464) <= radius_199465)) {
										F.line = 129;
										var Tmp7 = nimCopy(null, cell_199491, NTI192057);
										if (cells_199470 != null) { cells_199470.push(Tmp7); } else { cells_199470 = [Tmp7]; };
										}
										
										}
										
										F.line = 3915;
										i_199719 = addInt(i_199719, 1);
										if (!(((line_199482 != null ? line_199482.length : 0) == l_199721))) {
										F.line = 3916;
										failed_assert_impl_20481(makeNimstrLit("/home/kasia/.choosenim/toolchains/nim-0.19.4/lib/system.nim(3916, 11) `len(a) == L` seq modified while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						F.line = 131;
						nimCopy(v_199481, {Field0: x_199479, Field1: subInt(addInt(rect_199468.y, rect_199468.h), 1)}, NTI199480);
						F.line = 132;
						line_199482 = nimCopy(null, cast_fov_ray_199276(map_199462, wall_index_199463, origin_199464, v_199481), NTI199282);
						L8: do {
							F.line = 133;
							var cell_199568 = {Field0: 0, Field1: 0};
							F.line = 3911;
							var i_199725 = 0;
							F.line = 3912;
							var l_199727 = (line_199482 != null ? line_199482.length : 0);
							L9: do {
								F.line = 3913;
									L10: while (true) {
									if (!(i_199725 < l_199727)) break L10;
										F.line = 3914;
										nimCopy(cell_199568, line_199482[chckIndx(i_199725, 0, line_199482.length+0-1)-0], NTI192057);
										if ((find_199493(cells_199470, cell_199568) == -1)) {
										if ((distance_to_192077(cell_199568, origin_199464) <= radius_199465)) {
										F.line = 137;
										var Tmp11 = nimCopy(null, cell_199568, NTI192057);
										if (cells_199470 != null) { cells_199470.push(Tmp11); } else { cells_199470 = [Tmp11]; };
										}
										
										}
										
										F.line = 3915;
										i_199725 = addInt(i_199725, 1);
										if (!(((line_199482 != null ? line_199482.length : 0) == l_199727))) {
										F.line = 3916;
										failed_assert_impl_20481(makeNimstrLit("/home/kasia/.choosenim/toolchains/nim-0.19.4/lib/system.nim(3916, 11) `len(a) == L` seq modified while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						F.line = 2110;
						res_199732 = addInt(res_199732, 1);
					}
			} while(false);
		} while(false);
		L12: do {
			F.line = 139;
			var y_199597 = 0;
			F.line = 2104;
			var colontmp__199749 = 0;
			F.line = 2104;
			var colontmp__199750 = 0;
			F.line = 139;
			colontmp__199749 = rect_199468.y;
			F.line = 139;
			colontmp__199750 = addInt(rect_199468.h, rect_199468.y);
			F.line = 2107;
			var res_199753 = colontmp__199749;
			L13: do {
				F.line = 2108;
					L14: while (true) {
					if (!(res_199753 <= colontmp__199750)) break L14;
						F.line = 2109;
						y_199597 = res_199753;
						F.line = 140;
						var v_199599 = {Field0: rect_199468.x, Field1: y_199597};
						F.line = 141;
						var line_199600 = cast_fov_ray_199276(map_199462, wall_index_199463, origin_199464, v_199599);
						L15: do {
							F.line = 142;
							var cell_199609 = {Field0: 0, Field1: 0};
							F.line = 3911;
							var i_199740 = 0;
							F.line = 3912;
							var l_199742 = (line_199600 != null ? line_199600.length : 0);
							L16: do {
								F.line = 3913;
									L17: while (true) {
									if (!(i_199740 < l_199742)) break L17;
										F.line = 3914;
										nimCopy(cell_199609, line_199600[chckIndx(i_199740, 0, line_199600.length+0-1)-0], NTI192057);
										if ((find_199493(cells_199470, cell_199609) == -1)) {
										if ((distance_to_192077(cell_199609, origin_199464) <= radius_199465)) {
										F.line = 146;
										var Tmp18 = nimCopy(null, cell_199609, NTI192057);
										if (cells_199470 != null) { cells_199470.push(Tmp18); } else { cells_199470 = [Tmp18]; };
										}
										
										}
										
										F.line = 3915;
										i_199740 = addInt(i_199740, 1);
										if (!(((line_199600 != null ? line_199600.length : 0) == l_199742))) {
										F.line = 3916;
										failed_assert_impl_20481(makeNimstrLit("/home/kasia/.choosenim/toolchains/nim-0.19.4/lib/system.nim(3916, 11) `len(a) == L` seq modified while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						F.line = 148;
						nimCopy(v_199599, {Field0: subInt(addInt(rect_199468.w, rect_199468.x), 1), Field1: y_199597}, NTI199598);
						F.line = 149;
						line_199600 = nimCopy(null, cast_fov_ray_199276(map_199462, wall_index_199463, origin_199464, v_199599), NTI199282);
						L19: do {
							F.line = 150;
							var cell_199639 = {Field0: 0, Field1: 0};
							F.line = 3911;
							var i_199746 = 0;
							F.line = 3912;
							var l_199748 = (line_199600 != null ? line_199600.length : 0);
							L20: do {
								F.line = 3913;
									L21: while (true) {
									if (!(i_199746 < l_199748)) break L21;
										F.line = 3914;
										nimCopy(cell_199639, line_199600[chckIndx(i_199746, 0, line_199600.length+0-1)-0], NTI192057);
										if ((find_199493(cells_199470, cell_199639) == -1)) {
										if ((distance_to_192077(cell_199639, origin_199464) <= radius_199465)) {
										F.line = 154;
										var Tmp22 = nimCopy(null, cell_199639, NTI192057);
										if (cells_199470 != null) { cells_199470.push(Tmp22); } else { cells_199470 = [Tmp22]; };
										}
										
										}
										
										F.line = 3915;
										i_199746 = addInt(i_199746, 1);
										if (!(((line_199600 != null ? line_199600.length : 0) == l_199748))) {
										F.line = 3916;
										failed_assert_impl_20481(makeNimstrLit("/home/kasia/.choosenim/toolchains/nim-0.19.4/lib/system.nim(3916, 11) `len(a) == L` seq modified while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						F.line = 2110;
						res_199753 = addInt(res_199753, 1);
					}
			} while(false);
		} while(false);
		F.line = 157;
		var res_199660 = nimCopy(null, cells_199470, NTI199469);
		L23: do {
			F.line = 158;
			var cell_199669 = {Field0: 0, Field1: 0};
			F.line = 3911;
			var i_199775 = 0;
			F.line = 3912;
			var l_199777 = (res_199660 != null ? res_199660.length : 0);
			L24: do {
				F.line = 3913;
					L25: while (true) {
					if (!(i_199775 < l_199777)) break L25;
						F.line = 3914;
						nimCopy(cell_199669, res_199660[chckIndx(i_199775, 0, res_199660.length+0-1)-0], NTI192057);
						if (!(is_wall_199037(map_199462, wall_index_199463, cell_199669))) {
						L26: do {
							F.line = 160;
							var x_199683 = 0;
							F.line = 2107;
							var res_199769 = -1;
							L27: do {
								F.line = 2108;
									L28: while (true) {
									if (!(res_199769 <= 2)) break L28;
										F.line = 2109;
										x_199683 = res_199769;
										L29: do {
											F.line = 161;
											var y_199697 = 0;
											F.line = 2107;
											var res_199763 = -1;
											L30: do {
												F.line = 2108;
													L31: while (true) {
													if (!(res_199763 <= 2)) break L31;
														F.line = 2109;
														y_199697 = res_199763;
														F.line = 162;
														var ncell_199699 = HEX2B_192486(cell_199669, {Field0: x_199683, Field1: y_199697});
														F.line = 163;
														var m_height_199700 = map_199462.height;
														if (((((-1 < ncell_199699.Field0) && (ncell_199699.Field0 < map_199462.width)) && (-1 < ncell_199699.Field1)) && (ncell_199699.Field1 < m_height_199700))) {
															if (!is_wall_199037(map_199462, wall_index_199463, ncell_199699)) Tmp32 = false; else {																Tmp32 = (distance_to_192077(ncell_199699, origin_199464) <= radius_199465);															}														if (Tmp32) {
														F.line = 167;
														var Tmp33 = nimCopy(null, ncell_199699, NTI192057);
														if (cells_199470 != null) { cells_199470.push(Tmp33); } else { cells_199470 = [Tmp33]; };
														}
														
														}
														
														F.line = 2110;
														res_199763 = addInt(res_199763, 1);
													}
											} while(false);
										} while(false);
										F.line = 2110;
										res_199769 = addInt(res_199769, 1);
									}
							} while(false);
						} while(false);
						}
						
						F.line = 3915;
						i_199775 = addInt(i_199775, 1);
						if (!(((res_199660 != null ? res_199660.length : 0) == l_199777))) {
						F.line = 3916;
						failed_assert_impl_20481(makeNimstrLit("/home/kasia/.choosenim/toolchains/nim-0.19.4/lib/system.nim(3916, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 169;
		result_199467 = nimCopy(null, cells_199470, NTI199469);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_199467;

}

function nextLevel() {
	var F={procname:"input_handler.nextLevel",prev:framePtr,filename:"input_handler.nim",line:0};
	framePtr = F;
		if (is_stairs_193046(game_207014[0].map, game_207014[0].player.position.Field0, game_207014[0].player.position.Field1)) {
		F.line = 181;
		if (game_207014[0].game_messages != null) { game_207014[0].game_messages.push(makeNimstrLit("You descend deeper in the dungeon")); } else { game_207014[0].game_messages = [makeNimstrLit("You descend deeper in the dungeon")]; };
		if ((0 < (game_207014[0].entities != null ? game_207014[0].entities.length : 0))) {
		F.line = 184;
		if (game_207014[0].entities.length < 0) { for (var i=game_207014[0].entities.length;i<0;++i) game_207014[0].entities.push(null); }
               else { game_207014[0].entities.length = 0; };
		}
		
		F.line = 186;
		nimCopy(game_207014[0].map, generate_map_205036(15, 15, [{Field0: 6, Field1: 6}]), NTI193003);
		F.line = 187;
		place_entities_205192(game_207014[0].map, game_207014[0], "entities", 3, 2);
		F.line = 189;
		nimCopy(game_207014[0].player.position, {Field0: 1, Field1: 1}, NTI192057);
		F.line = 191;
		game_207014[0].recalc_FOV = true;
		F.line = 192;
		game_207014[0].FOV_map = nimCopy(null, calculate_fov_199460(game_207014[0].map, 0, game_207014[0].player.position, 4), NTI199466);
		}
		else {
			F.line = 194;
		if (game_207014[0].game_messages != null) { game_207014[0].game_messages.push(makeNimstrLit("There are no stairs here")); } else { game_207014[0].game_messages = [makeNimstrLit("There are no stairs here")]; };
		}
		
	framePtr = F.prev;

	
}

function moveTargetNim(x_208090, y_208091) {
	var F={procname:"input_handler.moveTargetNim",prev:framePtr,filename:"input_handler.nim",line:0};
	framePtr = F;
		F.line = 233;
		rawEcho((makeNimstrLit("Move target ")).concat(cstrToNimstr((x_208090)+""),makeNimstrLit(" "),cstrToNimstr((y_208091)+"")));
		F.line = 234;
		nimCopy(game_207014[0].targeting, HEX2B_192486(game_207014[0].targeting, {Field0: x_208090, Field1: y_208091}), NTI192057);
	framePtr = F.prev;

	
}

function confirmTargetNim() {
	var F={procname:"input_handler.confirmTargetNim",prev:framePtr,filename:"input_handler.nim",line:0};
	framePtr = F;
		F.line = 238;
		var tg_208111 = get_creatures_at_196097(game_207014[0].entities, game_207014[0].targeting.Field0, game_207014[0].targeting.Field1);
		if (!((tg_208111 === null))) {
		F.line = 240;
		take_damage_197266(tg_208111.creature, 6);
		}
		
		F.line = 244;
		document.getElementById("keypad").style.display = "block";
		F.line = 245;
		document.getElementById("targeting_keypad").style.display = "none";
		F.line = 248;
		game_207014[0].game_state = 1;
	framePtr = F.prev;

	
}

function quitTargetingNim() {
	var F={procname:"input_handler.quitTargetingNim",prev:framePtr,filename:"input_handler.nim",line:0};
	framePtr = F;
		F.line = 252;
		nimCopy(game_207014[0].targeting, game_207014[0].player.position, NTI192057);
		F.line = 254;
		game_207014[0].game_state = 0;
		F.line = 258;
		document.getElementById("keypad").style.display = "block";
		F.line = 259;
		document.getElementById("targeting_keypad").style.display = "none";
	framePtr = F.prev;

	
}
var game_212027 = [null];

function get_context2d_136728(c_136730) {
	var result_136731 = null;

	var F={procname:"html5_canvas.getContext2D",prev:framePtr,filename:"../../../.nimble/pkgs/html5_canvas-1.3/html5_canvas.nim",line:0};
	framePtr = F;
		F.line = 24;
		result_136731=c_136730.getContext('2d');
	framePtr = F.prev;

	return result_136731;

}

function new_game_201079(canvas_201081) {
	var result_201082 = null;

	var F={procname:"game_class.newGame",prev:framePtr,filename:"game_class.nim",line:0};
	framePtr = F;
		F.line = 34;
		result_201082 = {mx: 0, my: 0, canvas: null, context: null, images: null, player: null, map: {tiles: null, width: 0, height: 0}, recalc_FOV: false, FOV_map: null, explored: null, entities: null, game_state: 0, previous_state: 0, game_messages: null, to_remove: null, targeting: {Field0: 0, Field1: 0}};
		F.line = 35;
		result_201082.canvas = canvas_201081;
		F.line = 36;
		result_201082.context = get_context2d_136728(canvas_201081);
		F.line = 37;
		result_201082.explored = nimCopy(null, [], NTI201105);
		F.line = 38;
		result_201082.game_state = 0;
	framePtr = F.prev;

	return result_201082;

}

function fill_styleHEX3D_136128(ctx_136130, color_136131) {
	var F={procname:"html5_canvas.fillStyle=",prev:framePtr,filename:"../../../.nimble/pkgs/html5_canvas-1.3/html5_canvas/CanvasRenderingContext2D.nim",line:0};
	framePtr = F;
		F.line = 44;
		ctx_136130.fillStyle=color_136131;
	framePtr = F.prev;

	
}

function rgb_136001(r_136003, g_136004, b_136005) {
	var result_136006 = null;

	var F={procname:"html5_canvas.rgb",prev:framePtr,filename:"../../../.nimble/pkgs/html5_canvas-1.3/html5_canvas/rgb.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 8;
		result_136006 = toJSStr((makeNimstrLit("rgb(")).concat(cstrToNimstr((r_136003)+""),makeNimstrLit(","),cstrToNimstr((g_136004)+""),makeNimstrLit(","),cstrToNimstr((b_136005)+""),makeNimstrLit(")")));
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_136006;

}

function clear_game_201147(game_201149) {
	var F={procname:"game_class.clearGame",prev:framePtr,filename:"game_class.nim",line:0};
	framePtr = F;
		F.line = 44;
		fill_styleHEX3D_136128(game_201149.context, rgb_136001(0, 0, 0));
		F.line = 45;
		game_201149.context.fillRect(0.0, 0.0, game_201149.canvas.width, game_201149.canvas.height);
	framePtr = F.prev;

	
}

function render_gfx_tile_201165(game_201167, img_201168, x_201169, y_201170) {
	var F={procname:"game_class.renderGfxTile",prev:framePtr,filename:"game_class.nim",line:0};
	framePtr = F;
		F.line = 50;
		game_201167.context.drawImage(img_201168, x_201169, y_201170);
	framePtr = F.prev;

	
}

function draw_map_tile_201258(game_201260, point_201261, tile_201262) {
	var F={procname:"game_class.drawMapTile",prev:framePtr,filename:"game_class.nim",line:0};
	framePtr = F;
		if ((tile_201262 == 0)) {
		F.line = 72;
		render_gfx_tile_201165(game_201260, game_201260.images[chckIndx(1, 0, game_201260.images.length+0-1)-0], point_201261.Field0, point_201261.Field1);
		}
		else {
		if ((tile_201262 == 1)) {
		F.line = 74;
		render_gfx_tile_201165(game_201260, game_201260.images[chckIndx(2, 0, game_201260.images.length+0-1)-0], point_201261.Field0, point_201261.Field1);
		}
		else {
		if ((tile_201262 == 2)) {
		F.line = 76;
		render_gfx_tile_201165(game_201260, game_201260.images[chckIndx(8, 0, game_201260.images.length+0-1)-0], point_201261.Field0, point_201261.Field1);
		}
		}}
	framePtr = F.prev;

	
}

function iso_pos_192505(x_192507, y_192508) {
	var result_192510 = {Field0: 0, Field1: 0};

	var F={procname:"math_helpers.isoPos",prev:framePtr,filename:"math_helpers.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 26;
		var half_tile_height_192512 = 16;
		F.line = 27;
		var half_tile_width_192514 = 32;
		F.line = 28;
		var offset_x_192517 = 360;
		F.line = 29;
		var tile_x_192518 = addInt(offset_x_192517, mulInt(subInt(x_192507, y_192508), half_tile_width_192514));
		F.line = 30;
		var tile_y_192519 = mulInt(addInt(x_192507, y_192508), half_tile_height_192512);
		F.line = 32;
		nimCopy(result_192510, {Field0: tile_x_192518, Field1: tile_y_192519}, NTI192509);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_192510;

}

function find_201341(a_201346, item_201348) {
	var result_201349 = 0;

	var F={procname:"find.find",prev:framePtr,filename:"../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		L1: do {
			F.line = 2511;
			var i_201358 = {Field0: 0, Field1: 0};
			F.line = 3911;
			var i_201380 = 0;
			F.line = 3912;
			var l_201382 = (a_201346 != null ? a_201346.length : 0);
			L2: do {
				F.line = 3913;
					L3: while (true) {
					if (!(i_201380 < l_201382)) break L3;
						F.line = 3914;
						nimCopy(i_201358, a_201346[chckIndx(i_201380, 0, a_201346.length+0-1)-0], NTI192057);
						if (HEX3DHEX3D_196382(i_201358, item_201348)) {
						F.line = 2512;
						break BeforeRet;
						}
						
						F.line = 2513;
						result_201349 = addInt(result_201349, 1);
						F.line = 3915;
						i_201380 = addInt(i_201380, 1);
						if (!(((a_201346 != null ? a_201346.length : 0) == l_201382))) {
						F.line = 3916;
						failed_assert_impl_20481(makeNimstrLit("/home/kasia/.choosenim/toolchains/nim-0.19.4/lib/system.nim(3916, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 2514;
		result_201349 = -1;
	} while (false);
	framePtr = F.prev;

	return result_201349;

}

function tint_image_nim_200042(image_200044, color_200045, opacity_200046) {
	var result_200047 = null;

	var F={procname:"tint_image.tintImageNim",prev:framePtr,filename:"tint_image.nim",line:0};
	framePtr = F;
		F.line = 12;
		F.line = 12;
		var col_s_200048 = (makeNimstrLit("rgb( ")).concat(cstrToNimstr((color_200045.Field0)+""),makeNimstrLit(", "),cstrToNimstr((color_200045.Field1)+""),makeNimstrLit(", "),cstrToNimstr((color_200045.Field2)+""),makeNimstrLit(")"));
		result_200047 = tintImage(image_200044, toJSStr(col_s_200048), opacity_200046);
	framePtr = F.prev;

	return result_200047;

}

function draw_map_tile_tint_201276(game_201278, point_201279, tile_201280, tint_201281) {
	var F={procname:"game_class.drawMapTileTint",prev:framePtr,filename:"game_class.nim",line:0};
	framePtr = F;
		if ((tile_201280 == 0)) {
		F.line = 80;
		game_201278.context.drawImage(tint_image_nim_200042(game_201278.images[chckIndx(1, 0, game_201278.images.length+0-1)-0], tint_201281, 5.0000000000000000e-01), point_201279.Field0, point_201279.Field1);
		}
		else {
			F.line = 82;
		game_201278.context.drawImage(tint_image_nim_200042(game_201278.images[chckIndx(2, 0, game_201278.images.length+0-1)-0], tint_201281, 5.0000000000000000e-01), point_201279.Field0, point_201279.Field1);
		}
		
	framePtr = F.prev;

	
}

function render_map_201299(game_201301, map_201302, fov_map_201304, explored_201307, explored_201307_Idx) {
	var F={procname:"game_class.renderMap",prev:framePtr,filename:"game_class.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 86;
			var x_201317 = 0;
			F.line = 3616;
			var colontmp__201432 = 0;
			F.line = 86;
			colontmp__201432 = map_201302.width;
			F.line = 3617;
			var i_201435 = 0;
			L2: do {
				F.line = 3618;
					L3: while (true) {
					if (!(i_201435 < colontmp__201432)) break L3;
						F.line = 3619;
						x_201317 = i_201435;
						L4: do {
							F.line = 87;
							var y_201327 = 0;
							F.line = 3616;
							var colontmp__201427 = 0;
							F.line = 87;
							colontmp__201427 = map_201302.height;
							F.line = 3617;
							var i_201430 = 0;
							L5: do {
								F.line = 3618;
									L6: while (true) {
									if (!(i_201430 < colontmp__201427)) break L6;
										F.line = 3619;
										y_201327 = i_201430;
										F.line = 89;
										var cell_201329 = {Field0: x_201317, Field1: y_201327};
										if (contains_196323(fov_map_201304, cell_201329)) {
										F.line = 91;
										draw_map_tile_201258(game_201301, iso_pos_192505(x_201317, y_201327), map_201302.tiles[chckIndx(addInt(mulInt(y_201327, map_201302.width), x_201317), 0, map_201302.tiles.length+0-1)-0]);
										if ((find_201341(explored_201307[explored_201307_Idx], cell_201329) == -1)) {
										F.line = 93;
										var Tmp7 = nimCopy(null, cell_201329, NTI192057);
										if (explored_201307[explored_201307_Idx] != null) { explored_201307[explored_201307_Idx].push(Tmp7); } else { explored_201307[explored_201307_Idx] = [Tmp7]; };
										}
										
										}
										else {
										if (contains_196323(explored_201307[explored_201307_Idx], {Field0: x_201317, Field1: y_201327})) {
										F.line = 95;
										draw_map_tile_tint_201276(game_201301, iso_pos_192505(x_201317, y_201327), map_201302.tiles[chckIndx(addInt(mulInt(y_201327, map_201302.width), x_201317), 0, map_201302.tiles.length+0-1)-0], {Field0: 127, Field1: 127, Field2: 127});
										}
										}
										F.line = 3620;
										i_201430 = addInt(i_201430, 1);
									}
							} while(false);
						} while(false);
						F.line = 3620;
						i_201435 = addInt(i_201435, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function render_entities_201212(game_201214, fov_map_201216) {
	var F={procname:"game_class.renderEntities",prev:framePtr,filename:"game_class.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 62;
			var e_201225 = null;
			F.line = 3909;
			var colontmp__201239 = null;
			F.line = 62;
			colontmp__201239 = game_201214.entities;
			F.line = 3911;
			var i_201242 = 0;
			F.line = 3912;
			var l_201244 = (colontmp__201239 != null ? colontmp__201239.length : 0);
			L2: do {
				F.line = 3913;
					L3: while (true) {
					if (!(i_201242 < l_201244)) break L3;
						F.line = 3914;
						e_201225 = colontmp__201239[chckIndx(i_201242, 0, colontmp__201239.length+0-1)-0];
						F.line = 63;
						var iso_201226 = iso_pos_192505(e_201225.position.Field0, e_201225.position.Field1);
						if (contains_196323(fov_map_201216, {Field0: e_201225.position.Field0, Field1: e_201225.position.Field1})) {
						F.line = 67;
						render_gfx_tile_201165(game_201214, game_201214.images[chckIndx(e_201225.image, 0, game_201214.images.length+0-1)-0], addInt(iso_201226["Field0"], 8), addInt(iso_201226["Field1"], 8));
						}
						
						F.line = 3915;
						i_201242 = addInt(i_201242, 1);
						if (!(((colontmp__201239 != null ? colontmp__201239.length : 0) == l_201244))) {
						F.line = 3916;
						failed_assert_impl_20481(makeNimstrLit("/home/kasia/.choosenim/toolchains/nim-0.19.4/lib/system.nim(3916, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function render_201187(game_201189, player_201190) {
	var F={procname:"game_class.render",prev:framePtr,filename:"game_class.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((player_201190 === null)) {
		F.line = 55;
		break BeforeRet;
		}
		
		F.line = 56;
		var iso_201198 = iso_pos_192505(player_201190.position.Field0, player_201190.position.Field1);
		F.line = 58;
		render_gfx_tile_201165(game_201189, game_201189.images[chckIndx(0, 0, game_201189.images.length+0-1)-0], addInt(iso_201198["Field0"], 8), addInt(iso_201198["Field1"], 8));
	} while (false);
	framePtr = F.prev;

	
}

function render_bar_201672(game_201674, x_201675, y_201676, total_width_201677, value_201678, maximum_201679, bar_color_201680, bg_color_201681) {
	var F={procname:"game_class.renderBar",prev:framePtr,filename:"game_class.nim",line:0};
	framePtr = F;
		F.line = 121;
		game_201674.context.beginPath();
		F.line = 122;
		fill_styleHEX3D_136128(game_201674.context, rgb_136001(bg_color_201681.Field0, bg_color_201681.Field1, bg_color_201681.Field2));
		F.line = 123;
		game_201674.context.rect(x_201675, y_201676, total_width_201677, 1.0000000000000000e+01);
		F.line = 124;
		game_201674.context.fill();
		F.line = 127;
		var perc_201683 = ((value_201678 / maximum_201679) * 1.0000000000000000e+02);
		F.line = 129;
		var bar_width_201685 = ((perc_201683 / 1.0000000000000000e+02) * total_width_201677);
		if ((0.0 < bar_width_201685)) {
		F.line = 131;
		game_201674.context.beginPath();
		F.line = 132;
		fill_styleHEX3D_136128(game_201674.context, rgb_136001(bar_color_201680.Field0, bar_color_201680.Field1, bar_color_201680.Field2));
		F.line = 133;
		game_201674.context.rect(x_201675, y_201676, bar_width_201685, 1.0000000000000000e+01);
		F.line = 134;
		game_201674.context.fill();
		}
		
	framePtr = F.prev;

	
}

function draw_messages_201450(game_201452) {
	var F={procname:"game_class.drawMessages",prev:framePtr,filename:"game_class.nim",line:0};
	framePtr = F;
		F.line = 98;
		var drawn_201454 = null;
		if (((game_201452.game_messages != null ? game_201452.game_messages.length : 0) <= 5)) {
		F.line = 101;
		drawn_201454 = nimCopy(null, game_201452.game_messages, NTI201038);
		}
		else {
			F.line = 104;
			var view_201503 = {data: nimCopy(null, game_201452.game_messages, NTI201038), bounds: HEX2EHEX2E_47828(subInt((game_201452.game_messages != null ? game_201452.game_messages.length : 0), 5), subInt((game_201452.game_messages != null ? game_201452.game_messages.length : 0), 1))};
			L1: do {
				F.line = 107;
				var el_201585 = null;
				L2: do {
					F.line = 30;
					var pos_201636 = 0;
					F.line = 2312;
					var colontmp__201638 = {a: 0, b: 0};
					F.line = 30;
					nimCopy(colontmp__201638, view_201503.bounds, NTI37907);
					L3: do {
						F.line = 2315;
						var x_201640 = 0;
						F.line = 2104;
						var colontmp__201642 = 0;
						F.line = 2104;
						var colontmp__201644 = 0;
						F.line = 2315;
						colontmp__201642 = colontmp__201638.a;
						F.line = 2315;
						colontmp__201644 = colontmp__201638.b;
						F.line = 2107;
						var res_201646 = colontmp__201642;
						L4: do {
							F.line = 2108;
								L5: while (true) {
								if (!(res_201646 <= colontmp__201644)) break L5;
									F.line = 2109;
									x_201640 = res_201646;
									F.line = 2316;
									pos_201636 = x_201640;
									F.line = 31;
++excHandler;
									try {
									F.line = 32;
									el_201585 = view_201503.data[chckIndx(pos_201636, 0, view_201503.data.length+0-1)-0];
									F.line = 108;
									var Tmp7 = nimCopy(null, el_201585, NTI138);
									if (drawn_201454 != null) { drawn_201454.push(Tmp7); } else { drawn_201454 = [Tmp7]; };
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
									framePtr = F;
									F.line = 34;
									rawEcho((makeNimstrLit("Something weird happened...")).concat(cstrToNimstr((pos_201636)+"")));
lastJSError = prevJSError;
									} finally {
									framePtr = F;
									}
									F.line = 2110;
									res_201646 = addInt(res_201646, 1);
								}
						} while(false);
					} while(false);
				} while(false);
			} while(false);
		}
		
		F.line = 111;
		var y_201597 = 0;
		L8: do {
			F.line = 112;
			var i_201616 = 0;
			F.line = 2104;
			var colontmp__201652 = 0;
			F.line = 112;
			colontmp__201652 = subInt((drawn_201454 != null ? drawn_201454.length : 0), 1);
			F.line = 2107;
			var res_201655 = 0;
			L9: do {
				F.line = 2108;
					L10: while (true) {
					if (!(res_201655 <= colontmp__201652)) break L10;
						F.line = 2109;
						i_201616 = res_201655;
						F.line = 113;
						var el_201617 = nimCopy(null, drawn_201454[chckIndx(i_201616, 0, drawn_201454.length+0-1)-0], NTI138);
						F.line = 114;
						game_201452.context.font = "12px Arial";
						F.line = 115;
						fill_styleHEX3D_136128(game_201452.context, rgb_136001(255, 255, 255));
						F.line = 116;
						game_201452.context.fillText(toJSStr(el_201617), 5.0000000000000000e+00, addInt(subInt(game_201452.canvas.height, 50), y_201597));
						F.line = 117;
						y_201597 = addInt(y_201597, 10);
						F.line = 2110;
						res_201655 = addInt(res_201655, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function HEX2F_19442(x_19444, y_19445) {
	var result_19446 = 0.0;

	var F={procname:"system./",prev:framePtr,filename:"../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
		F.line = 3596;
		result_19446 = (x_19444 / y_19445);
	framePtr = F.prev;

	return result_19446;

}

function menu_211041(game_211043, header_211044, options_211046, width_211047, screen_width_211048, screen_height_211049) {
	var F={procname:"menus.menu",prev:framePtr,filename:"menus.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((26 < (options_211046 != null ? options_211046.length : 0))) {
		F.line = 8;
		rawEcho(makeNimstrLit("Cannot have a menu with more than 26 options."));
		F.line = 9;
		break BeforeRet;
		}
		
		F.line = 12;
		var header_height_211063 = 2;
		F.line = 14;
		var menu_h_211064 = addInt(addInt(header_height_211063, 1), 26);
		F.line = 15;
		var menu_y_211066 = ((HEX2F_19442(subInt(50, menu_h_211064), 2))|0);
		F.line = 17;
		game_211043.context.font = "12px Arial";
		F.line = 18;
		fill_styleHEX3D_136128(game_211043.context, rgb_136001(255, 255, 255));
		F.line = 22;
		var y_211070 = mulInt(addInt(menu_y_211066, header_height_211063), 10);
		F.line = 23;
		var letter_index_211079 = 97;
		L1: do {
			F.line = 24;
			var option_text_211215 = null;
			F.line = 3911;
			var i_211241 = 0;
			F.line = 3912;
			var l_211243 = (options_211046 != null ? options_211046.length : 0);
			L2: do {
				F.line = 3913;
					L3: while (true) {
					if (!(i_211241 < l_211243)) break L3;
						F.line = 3914;
						option_text_211215 = options_211046[chckIndx(i_211241, 0, options_211046.length+0-1)-0];
						F.line = 25;
						var text_211216 = (makeNimstrLit("(")).concat([chckRange(letter_index_211079, 0, 255)],makeNimstrLit(") "),option_text_211215);
						F.line = 26;
						game_211043.context.fillText(toJSStr(text_211216), 5.0000000000000000e+00, y_211070);
						F.line = 28;
						y_211070 = addInt(y_211070, 10);
						F.line = 29;
						letter_index_211079 = addInt(letter_index_211079, 1);
						F.line = 3915;
						i_211241 = addInt(i_211241, 1);
						if (!(((options_211046 != null ? options_211046.length : 0) == l_211243))) {
						F.line = 3916;
						failed_assert_impl_20481(makeNimstrLit("/home/kasia/.choosenim/toolchains/nim-0.19.4/lib/system.nim(3916, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
	} while (false);
	framePtr = F.prev;

	
}

function inventory_menu_211257(game_211259, header_211260, inventory_211261, inventory_width_211262, screen_width_211263, screen_height_211264) {
	var F={procname:"menus.inventory_menu",prev:framePtr,filename:"menus.nim",line:0};
	framePtr = F;
		F.line = 33;
		var options_211266 = null;
		if (((inventory_211261.items != null ? inventory_211261.items.length : 0) == 0)) {
		F.line = 36;
		options_211266 = nimCopy(null, [makeNimstrLit("Inventory is empty.")], NTI211285);
		}
		else {
			L1: do {
				F.line = 39;
				var item_211294 = null;
				F.line = 3909;
				var colontmp__211306 = null;
				F.line = 39;
				colontmp__211306 = inventory_211261.items;
				F.line = 3911;
				var i_211309 = 0;
				F.line = 3912;
				var l_211311 = (colontmp__211306 != null ? colontmp__211306.length : 0);
				L2: do {
					F.line = 3913;
						L3: while (true) {
						if (!(i_211309 < l_211311)) break L3;
							F.line = 3914;
							item_211294 = colontmp__211306[chckIndx(i_211309, 0, colontmp__211306.length+0-1)-0];
							F.line = 40;
							var Tmp4 = nimCopy(null, item_211294.owner.name, NTI138);
							if (options_211266 != null) { options_211266.push(Tmp4); } else { options_211266 = [Tmp4]; };
							F.line = 3915;
							i_211309 = addInt(i_211309, 1);
							if (!(((colontmp__211306 != null ? colontmp__211306.length : 0) == l_211311))) {
							F.line = 3916;
							failed_assert_impl_20481(makeNimstrLit("/home/kasia/.choosenim/toolchains/nim-0.19.4/lib/system.nim(3916, 11) `len(a) == L` seq modified while iterating over it"));
							}
							
						}
				} while(false);
			} while(false);
		}
		
		F.line = 42;
		menu_211041(game_211259, header_211260, options_211266, inventory_width_211262, screen_width_211263, screen_height_211264);
	framePtr = F.prev;

	
}

function draw_targeting_201710(game_201712) {
	var F={procname:"game_class.drawTargeting",prev:framePtr,filename:"game_class.nim",line:0};
	framePtr = F;
		F.line = 137;
		var iso_201713 = iso_pos_192505(game_201712.targeting.Field0, game_201712.targeting.Field1);
		F.line = 138;
		render_gfx_tile_201165(game_201712, game_201712.images[chckIndx(7, 0, game_201712.images.length+0-1)-0], iso_201713["Field0"], iso_201713["Field1"]);
	framePtr = F.prev;

	
}

function find_path_nim_195024(map_195026, start_195027, end_point_195028) {
	var result_195030 = null;

	var F={procname:"astar.findPathNim",prev:framePtr,filename:"astar.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 8;
		var res_195031 = findPath(map_195026, start_195027, end_point_195028);
		F.line = 9;
		var ret_195033 = null;
		L1: do {
			F.line = 12;
			var i_195052 = 0;
			F.line = 2104;
			var colontmp__195065 = 0;
			F.line = 12;
			colontmp__195065 = subInt((res_195031 != null ? res_195031.length : 0), 1);
			F.line = 2107;
			var res_195068 = 0;
			L2: do {
				F.line = 2108;
					L3: while (true) {
					if (!(res_195068 <= colontmp__195065)) break L3;
						F.line = 2109;
						i_195052 = res_195068;
						F.line = 15;
						if (ret_195033 != null) { ret_195033.push({Field0: res_195031[chckIndx(i_195052, 0, res_195031.length+0-1)-0][chckIndx(0, 0, res_195031[chckIndx(i_195052, 0, res_195031.length+0-1)-0].length+0-1)-0], Field1: res_195031[chckIndx(i_195052, 0, res_195031.length+0-1)-0][chckIndx(1, 0, res_195031[chckIndx(i_195052, 0, res_195031.length+0-1)-0].length+0-1)-0]}); } else { ret_195033 = [{Field0: res_195031[chckIndx(i_195052, 0, res_195031.length+0-1)-0][chckIndx(0, 0, res_195031[chckIndx(i_195052, 0, res_195031.length+0-1)-0].length+0-1)-0], Field1: res_195031[chckIndx(i_195052, 0, res_195031.length+0-1)-0][chckIndx(1, 0, res_195031[chckIndx(i_195052, 0, res_195031.length+0-1)-0].length+0-1)-0]}]; };
						F.line = 2110;
						res_195068 = addInt(res_195068, 1);
					}
			} while(false);
		} while(false);
		F.line = 17;
		result_195030 = nimCopy(null, ret_195033, NTI195032);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_195030;

}

function round_132846(x_132850, places_132852) {
	var result_132853 = 0.0;

		if ((places_132852 == 0)) {
		result_132853 = Math.round(x_132850);
		}
		else {
			var mult_132854 = Math.pow(1.0000000000000000e+01, places_132852);
			result_132853 = (Math.round((x_132850 * mult_132854)) / mult_132854);
		}
		

	return result_132853;

}

function is_blocked_193027(map_193029, x_193030, y_193031) {
	var result_193032 = false;

	var F={procname:"map.is_blocked",prev:framePtr,filename:"map.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((map_193029.tiles[chckIndx(addInt(mulInt(y_193031, map_193029.width), x_193030), 0, map_193029.tiles.length+0-1)-0] == 0)) {
		F.line = 17;
		result_193032 = true;
		break BeforeRet;
		}
		else {
			F.line = 19;
			result_193032 = false;
			break BeforeRet;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_193032;

}

function move_towards_197386(e_197388, target_197389, game_map_197390, entities_197392, messages_197395, messages_197395_Idx) {
			var Tmp1;

	var result_197396 = false;

	var F={procname:"entity.move_towards",prev:framePtr,filename:"entity.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 150;
		var dx_197397 = subInt(target_197389.Field0, e_197388.position.Field0);
		F.line = 151;
		var dy_197398 = subInt(target_197389.Field1, e_197388.position.Field1);
		F.line = 153;
		var distance_197399 = distance_to_192077(e_197388.position, target_197389);
		F.line = 155;
		dx_197397 = ((round_132846(HEX2F_19442(dx_197397, distance_197399), 0))|0);
		F.line = 156;
		dy_197398 = ((round_132846(HEX2F_19442(dy_197398, distance_197399), 0))|0);
			if (!(is_blocked_193027(game_map_197390, addInt(e_197388.position.Field0, dx_197397), addInt(e_197388.position.Field1, dy_197398)))) Tmp1 = true; else {				Tmp1 = (get_creatures_at_196097(entities_197392, addInt(e_197388.position.Field0, dx_197397), addInt(e_197388.position.Field1, dy_197398)) === null);			}		if (Tmp1) {
		F.line = 160;
		rawEcho((makeNimstrLit("We can move to ")).concat(cstrToNimstr((addInt(e_197388.position.Field0, dx_197397))+""),makeNimstrLit(" "),cstrToNimstr((addInt(e_197388.position.Field1, dy_197398))+"")));
		F.line = 161;
		result_197396 = move_197336(e_197388, dx_197397, dy_197398, game_map_197390, entities_197392, messages_197395, messages_197395_Idx);
		break BeforeRet;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_197396;

}

function move_astar_197441(e_197443, target_197444, game_map_197445, entities_197447, messages_197450, messages_197450_Idx) {
	var F={procname:"entity.move_astar",prev:framePtr,filename:"entity.nim",line:0};
	framePtr = F;
		F.line = 164;
		rawEcho(makeNimstrLit("Calling astar..."));
		F.line = 165;
		var astar_197454 = find_path_nim_195024(game_map_197445, e_197443.position, target_197444);
		if ((1 < (astar_197454 != null ? astar_197454.length : 0))) {
		F.line = 171;
		nimCopy(e_197443.position, astar_197454[chckIndx(1, 0, astar_197454.length+0-1)-0], NTI192057);
		}
		else {
			F.line = 174;
		move_towards_197386(e_197443, target_197444, game_map_197445, entities_197447, messages_197450, messages_197450_Idx);
		}
		
	framePtr = F.prev;

	
}

function take_turn_197477(ai_197479, target_197480, fov_map_197482, game_map_197483, entities_197485, messages_197488, messages_197488_Idx) {
	var F={procname:"entity.take_turn",prev:framePtr,filename:"entity.nim",line:0};
	framePtr = F;
		F.line = 181;
		var monster_197489 = ai_197479.owner;
		if (contains_196323(fov_map_197482, monster_197489.position)) {
		if ((2 <= distance_to_192077(monster_197489.position, target_197480.position))) {
		F.line = 187;
		move_astar_197441(monster_197489, target_197480.position, game_map_197483, entities_197485, messages_197488, messages_197488_Idx);
		}
		else {
		if ((0 < target_197480.creature.hp)) {
		F.line = 190;
		attack_197292(ai_197479.owner.creature, target_197480, messages_197488, messages_197488_Idx);
		}
		}
		}
		
	framePtr = F.prev;

	
}

function mark_for_del_210041(e_210043, game_210044) {
	var F={procname:"death_functions.mark_for_del",prev:framePtr,filename:"death_functions.nim",line:0};
	framePtr = F;
		F.line = 4;
		if (game_210044.to_remove != null) { game_210044.to_remove.push(e_210043); } else { game_210044.to_remove = [e_210043]; };
	framePtr = F.prev;

	
}

function death_player_210135(e_210137, game_210138) {
	var F={procname:"death_functions.death_player",prev:framePtr,filename:"death_functions.nim",line:0};
	framePtr = F;
		F.line = 17;
		if (game_210138.game_messages != null) { game_210138.game_messages.push(makeNimstrLit("You are dead!")); } else { game_210138.game_messages = [makeNimstrLit("You are dead!")]; };
		F.line = 19;
		game_210138.player = null;
		F.line = 21;
		game_210138.game_state = 2;
	framePtr = F.prev;

	
}

function death_monster_210068(e_210070, game_210071) {
	var F={procname:"death_functions.death_monster",prev:framePtr,filename:"death_functions.nim",line:0};
	framePtr = F;
		F.line = 7;
		if (game_210071.game_messages != null) { game_210071.game_messages.push((e_210070.name).concat(makeNimstrLit(" is dead!"))); } else { game_210071.game_messages = [(e_210070.name).concat(makeNimstrLit(" is dead!"))]; };
		F.line = 9;
		delete_207127(game_210071, "entities", chckRange(find_207069(game_210071.entities, e_210070), 0, 2147483647));
		F.line = 11;
		delete_207127(game_210071, "to_remove", chckRange(find_207069(game_210071.to_remove, e_210070), 0, 2147483647));
		F.line = 13;
		e_210070.creature = null;
		F.line = 14;
		e_210070.ai = null;
	framePtr = F.prev;

	
}

function ready_212041(canvas_212043) {

		function main_loop_212248(time_212250) {
					var Tmp1;
									var Tmp5;
									var Tmp6;

			var F={procname:"ready.mainLoop",prev:framePtr,filename:"main.nim",line:0};
			framePtr = F;
				F.line = 46;
				window.requestAnimationFrame(main_loop_212248);
				if (game_212027[0].recalc_FOV) {
				F.line = 54;
				game_212027[0].FOV_map = nimCopy(null, calculate_fov_199460(game_212027[0].map, 0, game_212027[0].player.position, 4), NTI199466);
				F.line = 56;
				game_212027[0].recalc_FOV = false;
				}
				
				F.line = 58;
				clear_game_201147(game_212027[0]);
				F.line = 60;
				render_map_201299(game_212027[0], game_212027[0].map, game_212027[0].FOV_map, game_212027[0], "explored");
				F.line = 61;
				render_entities_201212(game_212027[0], game_212027[0].FOV_map);
				F.line = 62;
				render_201187(game_212027[0], game_212027[0].player);
				F.line = 63;
				render_bar_201672(game_212027[0], 10, 10, 100, game_212027[0].player.creature.hp, game_212027[0].player.creature.max_hp, {Field0: 255, Field1: 0, Field2: 0}, {Field0: 191, Field1: 0, Field2: 0});
				F.line = 64;
				draw_messages_201450(game_212027[0]);
					if ((game_212027[0].game_state == 3)) Tmp1 = true; else {						Tmp1 = (game_212027[0].game_state == 4);					}				if (Tmp1) {
				F.line = 68;
				var inv_title_212263 = null;
				if ((game_212027[0].game_state == 3)) {
				F.line = 70;
				inv_title_212263 = nimCopy(null, makeNimstrLit("INVENTORY. Press key to use item"), NTI138);
				}
				else {
					F.line = 72;
					inv_title_212263 = nimCopy(null, makeNimstrLit("INVENTORY. Press key to drop item"), NTI138);
				}
				
				F.line = 74;
				inventory_menu_211257(game_212027[0], inv_title_212263, game_212027[0].player.inventory, 50, game_212027[0].canvas.width, game_212027[0].canvas.height);
				}
				
				if ((game_212027[0].game_state == 5)) {
				F.line = 78;
				draw_targeting_201710(game_212027[0]);
				}
				
				if ((game_212027[0].game_state == 1)) {
				L2: do {
					F.line = 82;
					var entity_212272 = null;
					F.line = 3909;
					var colontmp__212305 = null;
					F.line = 82;
					colontmp__212305 = game_212027[0].entities;
					F.line = 3911;
					var i_212308 = 0;
					F.line = 3912;
					var l_212310 = (colontmp__212305 != null ? colontmp__212305.length : 0);
					L3: do {
						F.line = 3913;
							L4: while (true) {
							if (!(i_212308 < l_212310)) break L4;
								F.line = 3914;
								entity_212272 = colontmp__212305[chckIndx(i_212308, 0, colontmp__212305.length+0-1)-0];
									if (!!((entity_212272.ai === null))) Tmp5 = false; else {										Tmp5 = !(entity_212272.creature.dead);									}								if (Tmp5) {
								F.line = 85;
								take_turn_197477(entity_212272.ai, game_212027[0].player, game_212027[0].FOV_map, game_212027[0].map, game_212027[0].entities, game_212027[0], "game_messages");
								}
								
									if (!!((entity_212272.creature === null))) Tmp6 = false; else {										Tmp6 = entity_212272.creature.dead;									}								if (Tmp6) {
								F.line = 88;
								mark_for_del_210041(entity_212272, game_212027[0]);
								}
								
								if (game_212027[0].player.creature.dead) {
								F.line = 92;
								death_player_210135(game_212027[0].player, game_212027[0]);
								F.line = 93;
								break L2;
								}
								
								F.line = 3915;
								i_212308 = addInt(i_212308, 1);
								if (!(((colontmp__212305 != null ? colontmp__212305.length : 0) == l_212310))) {
								F.line = 3916;
								failed_assert_impl_20481(makeNimstrLit("/home/kasia/.choosenim/toolchains/nim-0.19.4/lib/system.nim(3916, 11) `len(a) == L` seq modified while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
				if (!((game_212027[0].game_state == 2))) {
				F.line = 97;
				game_212027[0].game_state = 0;
				}
				
				L7: do {
					F.line = 100;
					var entity_212298 = null;
					F.line = 3909;
					var colontmp__212314 = null;
					F.line = 100;
					colontmp__212314 = game_212027[0].to_remove;
					F.line = 3911;
					var i_212317 = 0;
					F.line = 3912;
					var l_212319 = (colontmp__212314 != null ? colontmp__212314.length : 0);
					L8: do {
						F.line = 3913;
							L9: while (true) {
							if (!(i_212317 < l_212319)) break L9;
								F.line = 3914;
								entity_212298 = colontmp__212314[chckIndx(i_212317, 0, colontmp__212314.length+0-1)-0];
								F.line = 101;
								death_monster_210068(entity_212298, game_212027[0]);
								F.line = 3915;
								i_212317 = addInt(i_212317, 1);
								if (!(((colontmp__212314 != null ? colontmp__212314.length : 0) == l_212319))) {
								F.line = 3916;
								failed_assert_impl_20481(makeNimstrLit("/home/kasia/.choosenim/toolchains/nim-0.19.4/lib/system.nim(3916, 11) `len(a) == L` seq modified while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
				}
				
			framePtr = F.prev;

			
		}

	var result_212047 = null;

	var F={procname:"main.ready",prev:framePtr,filename:"main.nim",line:0};
	framePtr = F;
		F.line = 19;
		rawEcho(makeNimstrLit("We\'ve done loading, ready"));
		F.line = 23;
		game_212027[0] = new_game_201079(canvas_212043);
		F.line = 24;
		clear_game_201147(game_212027[0]);
		F.line = 25;
		game_207014[0] = game_212027[0];
		L1: do {
			F.line = 29;
			var k_212215 = null;
			F.line = 3909;
			var colontmp__212334 = null;
			F.line = 29;
			colontmp__212334 = getURLs();
			F.line = 3911;
			var i_212337 = 0;
			F.line = 3912;
			var l_212339 = (colontmp__212334 != null ? colontmp__212334.length : 0);
			L2: do {
				F.line = 3913;
					L3: while (true) {
					if (!(i_212337 < l_212339)) break L3;
						F.line = 3914;
						k_212215 = colontmp__212334[chckIndx(i_212337, 0, colontmp__212334.length+0-1)-0];
						F.line = 30;
						rawEcho(cstrToNimstr(k_212215));
						F.line = 32;
						if (game_212027[0].images != null) { game_212027[0].images.push(get(k_212215)); } else { game_212027[0].images = [get(k_212215)]; };
						F.line = 3915;
						i_212337 = addInt(i_212337, 1);
						if (!(((colontmp__212334 != null ? colontmp__212334.length : 0) == l_212339))) {
						F.line = 3916;
						failed_assert_impl_20481(makeNimstrLit("/home/kasia/.choosenim/toolchains/nim-0.19.4/lib/system.nim(3916, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 35;
		game_212027[0].player = {position: {Field0: 1, Field1: 1}, image: 0, name: makeNimstrLit("Player"), creature: null, ai: null, item: null, inventory: null};
		F.line = 36;
		game_212027[0].player.creature = {owner: game_212027[0].player, hp: 20, max_hp: 20, attack: 40, defense: 30, dead: false};
		F.line = 37;
		game_212027[0].player.inventory = {capacity: 26, owner: null, items: null};
		F.line = 38;
		nimCopy(game_212027[0].map, generate_map_205036(15, 15, [{Field0: 10, Field1: 10}]), NTI193003);
		F.line = 39;
		place_entities_205192(game_212027[0].map, game_212027[0], "entities", 3, 2);
		F.line = 41;
		game_212027[0].recalc_FOV = true;
		F.line = 42;
		game_212027[0].FOV_map = nimCopy(null, calculate_fov_199460(game_212027[0].map, 0, game_212027[0].player.position, 4), NTI199466);
		F.line = 105;
		window.requestAnimationFrame(main_loop_212248);
	framePtr = F.prev;

	return result_212047;

}

function onReadyNim() {
	var F={procname:"main.onReadyNim",prev:framePtr,filename:"main.nim",line:0};
	framePtr = F;
		F.line = 109;
		rawEcho(makeNimstrLit("Calling Nim from JS"));
		F.line = 110;
		var canvas_212361 = document.getElementById("canvas-game");
		F.line = 111;
		ready_212041(canvas_212361);
	framePtr = F.prev;

	
}

function loadGameNim() {
	var F={procname:"main.loadGameNim",prev:framePtr,filename:"main.nim",line:0};
	framePtr = F;
		F.line = 115;
		rawEcho(makeNimstrLit("Load test"));
		F.line = 126;
		var cnv_212380 = game_212027[0].canvas;
		F.line = 127;
		var cnt_212381 = game_212027[0].context;
		F.line = 128;
		var imgs_212382 = nimCopy(null, game_212027[0].images, NTI201025);
		F.line = 131;
		game_212027[0] = loadJS();
		F.line = 133;
		game_212027[0].canvas = cnv_212380;
		F.line = 134;
		game_212027[0].context = cnt_212381;
		F.line = 135;
		game_212027[0].images = nimCopy(null, imgs_212382, NTI201025);
		F.line = 136;
		game_207014[0] = game_212027[0];
		L1: do {
			F.line = 140;
			var e_212391 = null;
			F.line = 3909;
			var colontmp__212424 = null;
			F.line = 140;
			colontmp__212424 = game_212027[0].entities;
			F.line = 3911;
			var i_212427 = 0;
			F.line = 3912;
			var l_212429 = (colontmp__212424 != null ? colontmp__212424.length : 0);
			L2: do {
				F.line = 3913;
					L3: while (true) {
					if (!(i_212427 < l_212429)) break L3;
						F.line = 3914;
						e_212391 = colontmp__212424[chckIndx(i_212427, 0, colontmp__212424.length+0-1)-0];
						if (!((e_212391.item === null))) {
						F.line = 142;
						e_212391.item.owner = e_212391;
						}
						
						if (!((e_212391.ai === null))) {
						F.line = 144;
						e_212391.ai.owner = e_212391;
						}
						
						if (!((e_212391.creature === null))) {
						F.line = 146;
						e_212391.creature.owner = e_212391;
						}
						
						F.line = 3915;
						i_212427 = addInt(i_212427, 1);
						if (!(((colontmp__212424 != null ? colontmp__212424.length : 0) == l_212429))) {
						F.line = 3916;
						failed_assert_impl_20481(makeNimstrLit("/home/kasia/.choosenim/toolchains/nim-0.19.4/lib/system.nim(3916, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 149;
		game_212027[0].player.creature.owner = game_212027[0].player;
		F.line = 152;
		if (game_212027[0].game_messages != null) { game_212027[0].game_messages.push(makeNimstrLit("Loaded game...")); } else { game_212027[0].game_messages = [makeNimstrLit("Loaded game...")]; };
	framePtr = F.prev;

	
}

function process_player_turn_key_208022(key_208024, game_208025) {
	var F={procname:"input_handler.processPlayerTurnKey",prev:framePtr,filename:"input_handler.nim",line:0};
	framePtr = F;
		F.line = 197;
		switch (key_208024) {
		case 37:
			F.line = 198;
			moveNim(-1, 0);
			break;
		case 39:
			F.line = 199;
			moveNim(1, 0);
			break;
		case 38:
			F.line = 200;
			moveNim(0, -1);
			break;
		case 40:
			F.line = 201;
			moveNim(0, 1);
			break;
		case 72:
			F.line = 203;
			moveNim(-1, 0);
			break;
		case 76:
			F.line = 204;
			moveNim(1, 0);
			break;
		case 74:
			F.line = 205;
			moveNim(0, 1);
			break;
		case 75:
			F.line = 206;
			moveNim(0, -1);
			break;
		case 89:
			F.line = 208;
			moveNim(-1, -1);
			break;
		case 85:
			F.line = 209;
			moveNim(1, -1);
			break;
		case 66:
			F.line = 210;
			moveNim(-1, 1);
			break;
		case 78:
			F.line = 211;
			moveNim(1, 1);
			break;
		case 71:
			F.line = 213;
			pickupNim();
			break;
		case 73:
			F.line = 214;
			showInventoryNim();
			break;
		case 68:
			F.line = 215;
			showDropNim();
			break;
		case 83:
			F.line = 216;
			saveGameNim();
			break;
		case 13:
			F.line = 218;
			nextLevel();
			break;
		default: 
			F.line = 220;
			rawEcho(cstrToNimstr((key_208024)+""));
			break;
		}
	framePtr = F.prev;

	
}

function process_inventory_key_208061(key_208063, game_208064) {
			var Tmp1;

	var F={procname:"input_handler.processInventoryKey",prev:framePtr,filename:"input_handler.nim",line:0};
	framePtr = F;
		F.line = 224;
		var index_208066 = subInt(key_208063, 65);
			if (!(0 <= index_208066)) Tmp1 = false; else {				Tmp1 = (index_208066 < (game_208064.player.inventory.items != null ? game_208064.player.inventory.items.length : 0));			}		if (Tmp1) {
		F.line = 226;
		inventorySelectNim(index_208066);
		}
		else {
		if ((key_208063 == 27)) {
		F.line = 229;
		quitInventoryNim();
		}
		}
	framePtr = F.prev;

	
}

function process_targeting_key_208149(key_208151, game_208152) {
	var F={procname:"input_handler.processTargetingKey",prev:framePtr,filename:"input_handler.nim",line:0};
	framePtr = F;
		F.line = 264;
		switch (key_208151) {
		case 37:
			F.line = 265;
			moveTargetNim(-1, 0);
			break;
		case 39:
			F.line = 266;
			moveTargetNim(1, 0);
			break;
		case 38:
			F.line = 267;
			moveTargetNim(0, -1);
			break;
		case 40:
			F.line = 268;
			moveTargetNim(0, 1);
			break;
		case 72:
			F.line = 270;
			moveTargetNim(-1, 0);
			break;
		case 76:
			F.line = 271;
			moveTargetNim(1, 0);
			break;
		case 74:
			F.line = 272;
			moveTargetNim(0, 1);
			break;
		case 75:
			F.line = 273;
			moveTargetNim(0, -1);
			break;
		case 89:
			F.line = 275;
			moveTargetNim(-1, -1);
			break;
		case 85:
			F.line = 276;
			moveTargetNim(1, -1);
			break;
		case 66:
			F.line = 277;
			moveTargetNim(-1, 1);
			break;
		case 78:
			F.line = 278;
			moveTargetNim(1, 1);
			break;
		case 27:
			F.line = 280;
			quitTargetingNim();
			break;
		case 13:
			F.line = 281;
			confirmTargetNim();
			break;
		default: 
			F.line = 283;
			rawEcho(cstrToNimstr((key_208151)+""));
			break;
		}
	framePtr = F.prev;

	
}

function process_key_down_208184(key_208186, game_208187) {
			var Tmp1;

	var F={procname:"input_handler.processKeyDown",prev:framePtr,filename:"input_handler.nim",line:0};
	framePtr = F;
		if ((game_208187.game_state == 0)) {
		F.line = 288;
		process_player_turn_key_208022(key_208186, game_208187);
		}
		else {
			if ((game_208187.game_state == 3)) Tmp1 = true; else {				Tmp1 = (game_208187.game_state == 4);			}		if (Tmp1) {
		F.line = 290;
		process_inventory_key_208061(key_208186, game_208187);
		}
		else {
		if ((game_208187.game_state == 5)) {
		F.line = 292;
		process_targeting_key_208149(key_208186, game_208187);
		}
		else {
			F.line = 294;
		rawEcho(makeNimstrLit("Not player turn"));
		}
		}}
	framePtr = F.prev;

	
}

function HEX3Aanonymous_212443(e_212446) {

		function on_key_down_212463(event_212465) {
			var F={procname:":anonymous.onKeyDown",prev:framePtr,filename:"main.nim",line:0};
			framePtr = F;
				F.line = 181;
				event_212465.preventDefault();
				if ((event_212465.keyCode == 81)) {
				F.line = 185;
				loadGameNim();
				}
				
				F.line = 187;
				process_key_down_208184(event_212465.keyCode, game_212027[0]);
			framePtr = F.prev;

			
		}

	var F={procname:"main.:anonymous",prev:framePtr,filename:"main.nim",line:0};
	framePtr = F;
		F.line = 156;
		var canvas_212447 = document.getElementById("canvas-game");
		F.line = 157;
		canvas_212447.width = 800;
		F.line = 158;
		canvas_212447.height = 600;
		F.line = 162;
		var ress_212450 = initLoader(window);
		F.line = 165;
		load(["gfx/human_m.png", "gfx/wall_stone.png", "gfx/floor_cave.png", "gfx/kobold.png", "gfx/potion.png", "gfx/scroll_lightning.png", "gfx/scroll_fire.png", "gfx/mouseover.png", "gfx/stairs_down.png"]);
		F.line = 190;
		window.addEventListener("keydown", on_key_down_212463, false);
	framePtr = F.prev;

	
}
window.onload = HEX3Aanonymous_212443;
